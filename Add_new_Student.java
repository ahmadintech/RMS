/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Rampoly_RMS;

import java.awt.Component;
import java.awt.FileDialog;
import java.awt.Image;
import java.awt.event.ItemEvent;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author ahmadintech
 */
public class Add_new_Student extends javax.swing.JFrame {

    Connection conn;
    String fdl = null;
    Double gA, gAB, gB, gBC, gC, gCD, gD, gE, gF;

    /**
     * Creates new form Add_new_Student
     */
    public Add_new_Student() {
        initComponents();
        
        this.setExtendedState(MAXIMIZED_BOTH);
        conn = ConnectMe.SQL();
        ConnectMe.mytime();
        getCourseUnit();
        refresh();
        RbtnMale.setSelected(true);
        FR4tblAddRec.setEnabled(false);
        btnSaveScore.setEnabled(false);
        btnDeleScore.setEnabled(false);

        DASHBOARD.setVisible(false);
        FrameaddCand.setVisible(false);
        FrameAddDep.setVisible(false);
        FrameAddCourse.setVisible(false);
        FrameAddNewScore.setVisible(false);
        FrameAddExScore.setVisible(false);
        FrameSettings.setVisible(false);
        addTableHeader();
        populateTable();
      
    }

    private void id() {
        fdl = CBsession.getSelectedItem() + "/" + CBlevel.getSelectedItem().toString() + "/" + CBdepartment.getSelectedItem() + "/";
        FR1txtID.setText(fdl);
    }

    private void refresh() {
        setting();
        settDepartment();
        CBdepartment.removeAllItems();
        CBsession.removeAllItems();
        CBlevel.removeAllItems();
        FR3CBDepartment.removeAllItems();
        FR3CBSession.removeAllItems();
        FR3CBlevel.removeAllItems();
        FR3CBSemester.removeAllItems();

        CBdepartment.addItem(settingDep.getText());
        CBsession.addItem(settingSession.getText());
        CBlevel.addItem(settingLevel.getText());
        FR3CBDepartment.addItem(settingDep.getText());
        FR3CBSession.addItem(settingSession.getText());
        FR3CBlevel.addItem(settingLevel.getText());
        FR3CBSemester.addItem(settingSemester.getText());
        // Toolkit.getDefaultToolkit().setLockingKeyState(KeyEvent.VK_CAPS_LOCK, true);
        setState();
        FR1tableshow();
        FR2tableshowDep();
        FR3tableshowCourse();
        FR4tblshowNames();
        FR4tblshowNames2();
        id();

        setDepartment.setSelectedItem(settingDep.getText());
        setSession.setSelectedItem(settingSession.getText());
        setLevel.setSelectedItem(settingLevel.getText());
        jCbSEM.setSelectedItem(settingSemester.getText());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        FrameaddCand = new javax.swing.JInternalFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        FR1txtphone = new javax.swing.JTextField();
        FR1txtID = new javax.swing.JTextField();
        RbtnMale = new javax.swing.JRadioButton();
        Rbtnfemale = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        FR1CBday = new javax.swing.JComboBox();
        FR1CBmonth = new javax.swing.JComboBox();
        FR1CByear = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        FR1CBlga = new javax.swing.JComboBox();
        FR1CBstate = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        FR1txtname = new javax.swing.JTextField();
        FR1txtsurname = new javax.swing.JTextField();
        FR1txtothername = new javax.swing.JTextField();
        FR1txtemail = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        CBdepartment = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        CBlevel = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        CBsession = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        FR1tbshow = new javax.swing.JTable();
        FR1btnchoose = new javax.swing.JButton();
        txtsearch1 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        FR1btnDelete = new javax.swing.JButton();
        btnupdate = new javax.swing.JButton();
        btnsave = new javax.swing.JButton();
        btnNewCandidiate = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        Displayphoto = new javax.swing.JLabel();
        FR1txtaddress = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        FrameAddDep = new javax.swing.JInternalFrame();
        jPanel4 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        btnSaveDep = new javax.swing.JButton();
        txtDepName = new javax.swing.JTextField();
        txtAbbr = new javax.swing.JTextField();
        btnUpdateDep = new javax.swing.JButton();
        btnDelDep = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        FR2tblShowDep = new javax.swing.JTable();
        FrameAddCourse = new javax.swing.JInternalFrame();
        jPanel5 = new javax.swing.JPanel();
        txtCourseName = new javax.swing.JTextField();
        FR3CBDepartment = new javax.swing.JComboBox();
        FR3CBSession = new javax.swing.JComboBox();
        txtCourseCode = new javax.swing.JTextField();
        btnSaveCourse = new javax.swing.JButton();
        btnUpdateCourse = new javax.swing.JButton();
        btnResetCourse = new javax.swing.JButton();
        btnDeleteCourse = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        FR3CBlevel = new javax.swing.JComboBox();
        jLabel22 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        FR3tblCourse = new javax.swing.JTable();
        FR3CBSemester = new javax.swing.JComboBox();
        jLabel26 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jSpUnit = new javax.swing.JSpinner();
        FrameAddNewScore = new javax.swing.JInternalFrame();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        FR4tblshowRecName = new javax.swing.JTable();
        txtSearch2 = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        ScoreName = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        btnSaveScore = new javax.swing.JButton();
        jScrollPane10 = new javax.swing.JScrollPane();
        FR4tblAddRec = new javax.swing.JTable();
        jLabel52 = new javax.swing.JLabel();
        lblTU = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        lblTGPA = new javax.swing.JLabel();
        FrameAddExScore = new javax.swing.JInternalFrame();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        FR4tblshowRecName1 = new javax.swing.JTable();
        txtSearch3 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        ScoreName1 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        btnUpdateScore = new javax.swing.JButton();
        btnDeleScore = new javax.swing.JButton();
        jScrollPane11 = new javax.swing.JScrollPane();
        FR4tblAddRec1 = new javax.swing.JTable();
        jLabel53 = new javax.swing.JLabel();
        lblTU1 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        lblTGPA1 = new javax.swing.JLabel();
        FrameSettings = new javax.swing.JInternalFrame();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel10 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jPanel11 = new javax.swing.JPanel();
        setSession = new javax.swing.JComboBox();
        setLevel = new javax.swing.JComboBox();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        btnSaveSetting = new javax.swing.JButton();
        jCbSEM = new javax.swing.JComboBox();
        jLabel30 = new javax.swing.JLabel();
        setDepartment = new javax.swing.JComboBox();
        jLabel31 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        settingDep = new javax.swing.JLabel();
        settingDep2 = new javax.swing.JLabel();
        settingDep3 = new javax.swing.JLabel();
        settingSession = new javax.swing.JLabel();
        settingDep4 = new javax.swing.JLabel();
        settingLevel = new javax.swing.JLabel();
        settingDep6 = new javax.swing.JLabel();
        settingSemester = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        DASHBOARD = new javax.swing.JInternalFrame();
        jScrollPane7 = new javax.swing.JScrollPane();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tblDashboard = new javax.swing.JTable();
        jToolBar1 = new javax.swing.JToolBar();
        jToolBar3 = new javax.swing.JToolBar();
        jPanel6 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jDesktopPane1.setBackground(new java.awt.Color(102, 204, 255));

        FrameaddCand.setClosable(true);
        FrameaddCand.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        FrameaddCand.setIconifiable(true);
        FrameaddCand.setMaximizable(true);
        FrameaddCand.setResizable(true);
        FrameaddCand.setVisible(true);
        FrameaddCand.addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                FrameaddCandInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jLabel1.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel1.setText("ID NO.");

        jLabel2.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel2.setText("Name");

        jLabel3.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel3.setText("Surname");

        jLabel4.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel4.setText("Othername");

        jLabel5.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel5.setText("Phone No.");

        FR1txtphone.setFont(new java.awt.Font("Ebrima", 0, 16)); // NOI18N
        FR1txtphone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                FR1txtphoneKeyTyped(evt);
            }
        });

        FR1txtID.setFont(new java.awt.Font("Ebrima", 0, 16)); // NOI18N
        FR1txtID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                FR1txtIDKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                FR1txtIDKeyTyped(evt);
            }
        });

        buttonGroup1.add(RbtnMale);
        RbtnMale.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        RbtnMale.setText("Male");

        buttonGroup1.add(Rbtnfemale);
        Rbtnfemale.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Rbtnfemale.setText("Female");

        jLabel6.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel6.setText("Gender");

        FR1CBday.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        FR1CBmonth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "JANUARY", "FEBRUARY", "MARCH", "APRIL", "MAY", "JUNE", "JULY", "AUGUST", "SEPTEMBER", "OCTOBER", "NOVEMBER", "DECEMBER" }));

        FR1CByear.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030" }));

        jLabel7.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel7.setText("State");

        FR1CBstate.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        FR1CBstate.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                FR1CBstateItemStateChanged(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel8.setText("Date of Birth");

        jLabel9.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel9.setText("LGA");

        FR1txtname.setFont(new java.awt.Font("Ebrima", 0, 16)); // NOI18N

        FR1txtsurname.setFont(new java.awt.Font("Ebrima", 0, 16)); // NOI18N

        FR1txtothername.setFont(new java.awt.Font("Ebrima", 0, 16)); // NOI18N

        FR1txtemail.setFont(new java.awt.Font("Ebrima", 0, 16)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel10.setText("Email");

        CBdepartment.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel12.setText("Department");

        jLabel13.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel13.setText("Level");

        CBlevel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel14.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel14.setText("Session");

        CBsession.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        FR1tbshow.setAutoCreateRowSorter(true);
        FR1tbshow.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        FR1tbshow.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID NUMBER", "NAME"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        FR1tbshow.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        FR1tbshow.setGridColor(new java.awt.Color(204, 204, 204));
        FR1tbshow.setRowHeight(22);
        FR1tbshow.setRowMargin(3);
        FR1tbshow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FR1tbshowMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(FR1tbshow);
        FR1tbshow.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (FR1tbshow.getColumnModel().getColumnCount() > 0) {
            FR1tbshow.getColumnModel().getColumn(0).setPreferredWidth(160);
            FR1tbshow.getColumnModel().getColumn(1).setResizable(false);
            FR1tbshow.getColumnModel().getColumn(1).setPreferredWidth(300);
        }

        FR1btnchoose.setText("BROWSE.....");
        FR1btnchoose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FR1btnchooseActionPerformed(evt);
            }
        });

        txtsearch1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsearch1KeyReleased(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("Search");

        FR1btnDelete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        FR1btnDelete.setText("Delete");
        FR1btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FR1btnDeleteActionPerformed(evt);
            }
        });

        btnupdate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnupdate.setText("Update");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });

        btnsave.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnsave.setText("Save");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });

        btnNewCandidiate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnNewCandidiate.setText("New");
        btnNewCandidiate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewCandidiateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNewCandidiate, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnsave, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FR1btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnsave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNewCandidiate, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(btnupdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(FR1btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 7, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        Displayphoto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Displayphoto.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 193, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(Displayphoto, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 195, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(Displayphoto, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE))
        );

        FR1txtaddress.setFont(new java.awt.Font("Ebrima", 0, 16)); // NOI18N

        jLabel15.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        jLabel15.setText("Address");

        jLabel38.setFont(new java.awt.Font("Corbel Light", 1, 18)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(255, 0, 0));
        jLabel38.setText("*");

        jLabel39.setFont(new java.awt.Font("Corbel Light", 1, 18)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(255, 0, 0));
        jLabel39.setText("*");

        jLabel40.setFont(new java.awt.Font("Corbel Light", 1, 18)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(255, 0, 0));
        jLabel40.setText("*");

        jLabel41.setFont(new java.awt.Font("Corbel Light", 1, 18)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(255, 0, 0));
        jLabel41.setText("*");

        jLabel42.setFont(new java.awt.Font("Corbel Light", 1, 18)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(255, 0, 0));
        jLabel42.setText("*");

        jLabel43.setFont(new java.awt.Font("Corbel Light", 1, 18)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(255, 0, 0));
        jLabel43.setText("*");

        jLabel44.setFont(new java.awt.Font("Corbel Light", 1, 18)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(255, 0, 0));
        jLabel44.setText("*");

        jLabel45.setFont(new java.awt.Font("Corbel Light", 1, 18)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(255, 0, 0));
        jLabel45.setText("*");

        jLabel46.setFont(new java.awt.Font("Corbel Light", 1, 18)); // NOI18N
        jLabel46.setForeground(new java.awt.Color(255, 0, 0));
        jLabel46.setText("*");

        jLabel47.setFont(new java.awt.Font("Corbel Light", 1, 18)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(255, 0, 0));
        jLabel47.setText("*");

        jLabel48.setFont(new java.awt.Font("Corbel Light", 1, 18)); // NOI18N
        jLabel48.setForeground(new java.awt.Color(255, 0, 0));
        jLabel48.setText("*");

        jLabel49.setFont(new java.awt.Font("Corbel Light", 1, 18)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(255, 0, 0));
        jLabel49.setText("*");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(478, 478, 478)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(jLabel1))
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(483, 483, 483)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(483, 483, 483)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(18, 18, 18)
                                .addComponent(txtsearch1, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel49)
                            .addComponent(jLabel48)
                            .addComponent(jLabel47)
                            .addComponent(jLabel46)
                            .addComponent(jLabel45)
                            .addComponent(jLabel44)
                            .addComponent(jLabel43)
                            .addComponent(jLabel42)
                            .addComponent(jLabel41)
                            .addComponent(jLabel40)
                            .addComponent(jLabel39)
                            .addComponent(jLabel38))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(RbtnMale, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Rbtnfemale, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(198, 198, 198)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(FR1btnchoose, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(9, 9, 9)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(1, 1, 1)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(CBlevel, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(FR1txtphone)
                                                .addComponent(FR1txtemail)
                                                .addComponent(CBsession, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(CBdepartment, 0, 334, Short.MAX_VALUE)))
                                        .addComponent(FR1CBlga, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(FR1CBstate, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(FR1txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(FR1txtname, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(FR1txtsurname, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(FR1txtothername, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(FR1txtaddress, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(FR1CBday, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(FR1CBmonth, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(FR1CByear, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(163, 163, 163))))
                        .addGap(23, 23, 23))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(625, 625, 625))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtsearch1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 848, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FR1txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel38))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FR1txtname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel39))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FR1txtsurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel40))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(27, 27, 27))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(FR1txtothername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel41))
                                .addGap(21, 21, 21)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(FR1CBday, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(FR1CBmonth, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel42)
                                    .addComponent(FR1CByear, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(RbtnMale)
                                    .addComponent(Rbtnfemale))
                                .addGap(58, 58, 58)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FR1txtaddress, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)
                            .addComponent(jLabel43))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FR1CBstate, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel44))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FR1CBlga, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel45))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FR1txtphone, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel46))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FR1txtemail, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CBdepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(jLabel47))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CBsession, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addComponent(jLabel48))
                        .addGap(13, 13, 13)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CBlevel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)
                            .addComponent(jLabel49)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FR1btnchoose, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {FR1txtID, FR1txtemail, FR1txtname, FR1txtothername, FR1txtphone, FR1txtsurname});

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout FrameaddCandLayout = new javax.swing.GroupLayout(FrameaddCand.getContentPane());
        FrameaddCand.getContentPane().setLayout(FrameaddCandLayout);
        FrameaddCandLayout.setHorizontalGroup(
            FrameaddCandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1194, Short.MAX_VALUE)
        );
        FrameaddCandLayout.setVerticalGroup(
            FrameaddCandLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameaddCandLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 549, Short.MAX_VALUE)
                .addContainerGap())
        );

        jDesktopPane1.add(FrameaddCand);
        FrameaddCand.setBounds(20, 30, 1210, 590);

        FrameAddDep.setClosable(true);
        FrameAddDep.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        FrameAddDep.setIconifiable(true);
        FrameAddDep.setMaximizable(true);
        FrameAddDep.setResizable(true);
        FrameAddDep.setTitle("RAMPOLY [DEPARTMENT]");
        FrameAddDep.setVisible(true);

        jPanel4.setBackground(new java.awt.Color(51, 51, 255));

        jLabel16.setText("Department Name");

        jLabel17.setText("Department Abbr");

        btnSaveDep.setText("SAVE");
        btnSaveDep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveDepActionPerformed(evt);
            }
        });

        btnUpdateDep.setText("UPDATE");
        btnUpdateDep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateDepActionPerformed(evt);
            }
        });

        btnDelDep.setText("DELETE");
        btnDelDep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelDepActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(jLabel16))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btnSaveDep, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdateDep, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelDep, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtAbbr)
                    .addComponent(txtDepName))
                .addContainerGap(98, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txtDepName, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(txtAbbr, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSaveDep, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdateDep, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelDep, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(66, 66, 66))
        );

        FR2tblShowDep.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Department Name", "Department Abbreviation", "Date Registered"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        FR2tblShowDep.setDropMode(javax.swing.DropMode.INSERT_ROWS);
        FR2tblShowDep.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FR2tblShowDepMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(FR2tblShowDep);

        javax.swing.GroupLayout FrameAddDepLayout = new javax.swing.GroupLayout(FrameAddDep.getContentPane());
        FrameAddDep.getContentPane().setLayout(FrameAddDepLayout);
        FrameAddDepLayout.setHorizontalGroup(
            FrameAddDepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameAddDepLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        FrameAddDepLayout.setVerticalGroup(
            FrameAddDepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameAddDepLayout.createSequentialGroup()
                .addGroup(FrameAddDepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jDesktopPane1.add(FrameAddDep);
        FrameAddDep.setBounds(0, 0, 1042, 436);

        FrameAddCourse.setClosable(true);
        FrameAddCourse.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        FrameAddCourse.setIconifiable(true);
        FrameAddCourse.setMaximizable(true);
        FrameAddCourse.setResizable(true);
        FrameAddCourse.setTitle("RAMPOLY [COURSES]");
        FrameAddCourse.setToolTipText("");
        FrameAddCourse.setVisible(true);

        btnSaveCourse.setText("Save");
        btnSaveCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveCourseActionPerformed(evt);
            }
        });

        btnUpdateCourse.setText("Update");
        btnUpdateCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateCourseActionPerformed(evt);
            }
        });

        btnResetCourse.setText("Reset");
        btnResetCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetCourseActionPerformed(evt);
            }
        });

        btnDeleteCourse.setText("Delete");
        btnDeleteCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCourseActionPerformed(evt);
            }
        });

        jLabel18.setText("Course Name");

        jLabel19.setText("Course Code");

        jLabel20.setText("Department");

        jLabel21.setText("Session");

        jLabel22.setText("Level");

        FR3tblCourse.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        FR3tblCourse.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course Name", "Course Code", "Unit"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        FR3tblCourse.setRowHeight(20);
        FR3tblCourse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FR3tblCourseMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(FR3tblCourse);
        if (FR3tblCourse.getColumnModel().getColumnCount() > 0) {
            FR3tblCourse.getColumnModel().getColumn(0).setPreferredWidth(120);
            FR3tblCourse.getColumnModel().getColumn(2).setPreferredWidth(5);
        }

        jLabel26.setText("Semester");

        jLabel51.setText("Code Unit");

        jSpUnit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(btnDeleteCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel20)
                                    .addComponent(jLabel21)
                                    .addComponent(jLabel22)
                                    .addComponent(jLabel26))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(FR3CBDepartment, 0, 275, Short.MAX_VALUE)
                                    .addComponent(FR3CBSession, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(FR3CBlevel, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(FR3CBSemester, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel19)
                                    .addComponent(jLabel51))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtCourseName, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                                    .addComponent(txtCourseCode, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                        .addComponent(btnSaveCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnUpdateCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnResetCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jSpUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(54, 54, 54))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnDeleteCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCourseCode, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addGap(11, 11, 11)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel51))
                .addGap(11, 11, 11)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FR3CBDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FR3CBSession, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FR3CBlevel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FR3CBSemester, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26))
                .addGap(26, 26, 26)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSaveCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdateCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnResetCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane4)
                .addContainerGap())
        );

        javax.swing.GroupLayout FrameAddCourseLayout = new javax.swing.GroupLayout(FrameAddCourse.getContentPane());
        FrameAddCourse.getContentPane().setLayout(FrameAddCourseLayout);
        FrameAddCourseLayout.setHorizontalGroup(
            FrameAddCourseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FrameAddCourseLayout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        FrameAddCourseLayout.setVerticalGroup(
            FrameAddCourseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jDesktopPane1.add(FrameAddCourse);
        FrameAddCourse.setBounds(0, 0, 907, 535);

        FrameAddNewScore.setClosable(true);
        FrameAddNewScore.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        FrameAddNewScore.setIconifiable(true);
        FrameAddNewScore.setMaximizable(true);
        FrameAddNewScore.setResizable(true);
        FrameAddNewScore.setTitle("RAMPOLY [ADD SCORE RECORD]");
        FrameAddNewScore.setVisible(true);

        FR4tblshowRecName.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        FR4tblshowRecName.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID No.", "Name", "Sex"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        FR4tblshowRecName.setRowHeight(20);
        FR4tblshowRecName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FR4tblshowRecNameMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(FR4tblshowRecName);

        txtSearch2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtSearch2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearch2KeyReleased(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel23.setText("Search");

        ScoreName.setBackground(new java.awt.Color(255, 255, 255));
        ScoreName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel25.setText("Name:");

        btnSaveScore.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSaveScore.setText("Save");
        btnSaveScore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveScoreActionPerformed(evt);
            }
        });

        FR4tblAddRec.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        FR4tblAddRec.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Unit", "Course", "CA", "Exam", "Total", "Grade", "CGPA"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        FR4tblAddRec.setRowHeight(30);
        jScrollPane10.setViewportView(FR4tblAddRec);

        jLabel52.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel52.setText("Total Unit of Course");

        lblTU.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTU.setText("0");

        jLabel54.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel54.setText("Total CGPA");

        lblTGPA.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTGPA.setText("0");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtSearch2, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ScoreName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane10))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel54, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel52))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblTU, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTGPA, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(518, 518, 518)
                        .addComponent(btnSaveScore, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(jLabel25)
                        .addComponent(ScoreName, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSearch2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel23)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnSaveScore, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel7Layout.createSequentialGroup()
                                    .addComponent(jLabel52)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel54)))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(lblTU)
                                .addGap(18, 18, 18)
                                .addComponent(lblTGPA)))
                        .addGap(58, 58, 58))))
        );

        javax.swing.GroupLayout FrameAddNewScoreLayout = new javax.swing.GroupLayout(FrameAddNewScore.getContentPane());
        FrameAddNewScore.getContentPane().setLayout(FrameAddNewScoreLayout);
        FrameAddNewScoreLayout.setHorizontalGroup(
            FrameAddNewScoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        FrameAddNewScoreLayout.setVerticalGroup(
            FrameAddNewScoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jDesktopPane1.add(FrameAddNewScore);
        FrameAddNewScore.setBounds(0, 0, 1341, 640);

        FrameAddExScore.setClosable(true);
        FrameAddExScore.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        FrameAddExScore.setIconifiable(true);
        FrameAddExScore.setMaximizable(true);
        FrameAddExScore.setResizable(true);
        FrameAddExScore.setTitle("RAMPOLY [UPDATE SCORE RECORD]");
        FrameAddExScore.setVisible(true);

        FR4tblshowRecName1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        FR4tblshowRecName1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID No.", "Name", "Sex"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        FR4tblshowRecName1.setRowHeight(20);
        FR4tblshowRecName1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FR4tblshowRecName1MouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(FR4tblshowRecName1);

        txtSearch3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtSearch3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearch3KeyReleased(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel24.setText("Search");

        ScoreName1.setBackground(new java.awt.Color(255, 255, 255));
        ScoreName1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel27.setText("Name:");

        btnUpdateScore.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnUpdateScore.setText("Update ");
        btnUpdateScore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateScoreActionPerformed(evt);
            }
        });

        btnDeleScore.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnDeleScore.setText("Delete");
        btnDeleScore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleScoreActionPerformed(evt);
            }
        });

        FR4tblAddRec1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        FR4tblAddRec1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Unit", "Course", "CA", "Exam", "Total", "Grade", "CGPA"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        FR4tblAddRec1.setRowHeight(30);
        jScrollPane11.setViewportView(FR4tblAddRec1);

        jLabel53.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel53.setText("Total Unit of Course");

        lblTU1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTU1.setText("0");

        jLabel55.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel55.setText("Total CGPA");

        lblTGPA1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTGPA1.setText("0");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtSearch3, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane11)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel53))
                                .addGap(33, 33, 33)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblTU1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblTGPA1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(419, 419, 419)
                                .addComponent(btnUpdateScore, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(btnDeleScore, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 15, Short.MAX_VALUE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ScoreName1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(ScoreName1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel27))
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSearch3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel24)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel53)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel55))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(lblTU1)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblTGPA1)
                                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(btnUpdateScore, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnDeleScore, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(42, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout FrameAddExScoreLayout = new javax.swing.GroupLayout(FrameAddExScore.getContentPane());
        FrameAddExScore.getContentPane().setLayout(FrameAddExScoreLayout);
        FrameAddExScoreLayout.setHorizontalGroup(
            FrameAddExScoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        FrameAddExScoreLayout.setVerticalGroup(
            FrameAddExScoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jDesktopPane1.add(FrameAddExScore);
        FrameAddExScore.setBounds(0, 0, 1368, 644);

        FrameSettings.setClosable(true);
        FrameSettings.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        FrameSettings.setIconifiable(true);
        FrameSettings.setTitle("RAMPLOY [SETTINGS]");
        FrameSettings.setVisible(true);

        buttonGroup2.add(jRadioButton1);
        jRadioButton1.setText("Windows Theme");

        buttonGroup2.add(jRadioButton2);
        jRadioButton2.setText("Nimbus Theme");

        buttonGroup2.add(jRadioButton3);
        jRadioButton3.setText("Metal Theme");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton3)
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton1))
                .addContainerGap(659, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(jRadioButton1)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton2)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton3)
                .addContainerGap(286, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Display", jPanel10);

        setSession.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030" }));
        setSession.setMinimumSize(new java.awt.Dimension(20, 20));
        setSession.setPreferredSize(new java.awt.Dimension(20, 20));

        setLevel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        setLevel.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ND", "HND" }));

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel28.setText("Level");

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel29.setText("Session");

        btnSaveSetting.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSaveSetting.setText("SAVE");
        btnSaveSetting.setFocusable(false);
        btnSaveSetting.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSaveSetting.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSaveSetting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveSettingActionPerformed(evt);
            }
        });

        jCbSEM.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1st SEMESTER", "2nd SEMESTER", "3rd SEMESTER", "4th SEMESTER" }));

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel30.setText("Semester");

        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel31.setText("Department");

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Status", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Space Mono", 1, 14), new java.awt.Color(0, 204, 0))); // NOI18N

        settingDep.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        settingDep.setText("COE");

        settingDep2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        settingDep2.setText("DEPARTMENT:");

        settingDep3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        settingDep3.setText("SESSION:");

        settingSession.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        settingSession.setText("COE");

        settingDep4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        settingDep4.setText("LEVEL:");

        settingLevel.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        settingLevel.setText("COE");

        settingDep6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        settingDep6.setText("SEMESTER:");

        settingSemester.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        settingSemester.setText("COE");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(settingDep6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(settingDep4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(settingDep3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(settingDep2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(settingDep, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                    .addComponent(settingSession, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(settingLevel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(settingSemester, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(settingDep, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(settingDep2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(settingSession, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(settingDep3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(settingLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(settingDep4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(settingSemester, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(settingDep6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(95, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel29)
                                    .addComponent(jLabel28))
                                .addGap(49, 49, 49))
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addComponent(jLabel30)
                                .addGap(41, 41, 41))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                                .addComponent(jLabel31)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jCbSEM, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(setSession, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(setDepartment, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(setLevel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnSaveSetting, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(setDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel31))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(setSession, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel29))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(setLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel28))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCbSEM, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel30))
                        .addGap(57, 57, 57)
                        .addComponent(btnSaveSetting, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(99, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Preference", jPanel11);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 816, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 448, Short.MAX_VALUE)
        );

        jTabbedPane3.addTab("Database", jPanel12);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 816, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 448, Short.MAX_VALUE)
        );

        jTabbedPane3.addTab("About", jPanel13);

        javax.swing.GroupLayout FrameSettingsLayout = new javax.swing.GroupLayout(FrameSettings.getContentPane());
        FrameSettings.getContentPane().setLayout(FrameSettingsLayout);
        FrameSettingsLayout.setHorizontalGroup(
            FrameSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3)
        );
        FrameSettingsLayout.setVerticalGroup(
            FrameSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3)
        );

        jDesktopPane1.add(FrameSettings);
        FrameSettings.setBounds(0, 0, 837, 514);

        DASHBOARD.setClosable(true);
        DASHBOARD.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        DASHBOARD.setIconifiable(true);
        DASHBOARD.setMaximizable(true);
        DASHBOARD.setResizable(true);
        DASHBOARD.setTitle("Dashboard");
        DASHBOARD.setToolTipText("DASHBOARD");
        DASHBOARD.setVisible(true);

        jPanel14.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblDashboard.setFont(new java.awt.Font("Segoe UI Semilight", 1, 14)); // NOI18N
        tblDashboard.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane8.setViewportView(tblDashboard);

        jPanel14.add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1850, 473));

        jScrollPane7.setViewportView(jPanel14);

        javax.swing.GroupLayout DASHBOARDLayout = new javax.swing.GroupLayout(DASHBOARD.getContentPane());
        DASHBOARD.getContentPane().setLayout(DASHBOARDLayout);
        DASHBOARDLayout.setHorizontalGroup(
            DASHBOARDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DASHBOARDLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 1033, Short.MAX_VALUE)
                .addContainerGap())
        );
        DASHBOARDLayout.setVerticalGroup(
            DASHBOARDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DASHBOARDLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jDesktopPane1.add(DASHBOARD);
        DASHBOARD.setBounds(100, 30, 1069, 597);

        jToolBar1.setFloatable(false);

        jToolBar3.setRollover(true);
        jToolBar1.add(jToolBar3);

        jLabel32.setText("NEW CANDIDIATE");
        jLabel32.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel32MouseClicked(evt);
            }
        });

        jLabel33.setText("ADD DEPARMENT");
        jLabel33.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel33MouseClicked(evt);
            }
        });

        jLabel34.setText("ADD COURSE");
        jLabel34.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel34MouseClicked(evt);
            }
        });

        jLabel35.setText("ADD SCORES");
        jLabel35.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel35MouseClicked(evt);
            }
        });

        jLabel36.setText("UPDATE SCORES");
        jLabel36.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel36MouseClicked(evt);
            }
        });

        jLabel37.setText("SETTINGS");
        jLabel37.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel37MouseClicked(evt);
            }
        });

        jLabel50.setText("DASHBOARD");
        jLabel50.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel50MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel50)
                .addGap(14, 14, 14)
                .addComponent(jLabel32)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel33)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel34)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel35)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel36)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel37)
                .addContainerGap(672, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(jLabel33)
                    .addComponent(jLabel34)
                    .addComponent(jLabel35)
                    .addComponent(jLabel36)
                    .addComponent(jLabel37)
                    .addComponent(jLabel50))
                .addContainerGap())
        );

        jToolBar1.add(jPanel6);

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 1242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 641, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
byte[] person_image2 = null;
    private void FR1btnchooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FR1btnchooseActionPerformed
        // TODO add your handling code here:
        FileDialog fd = new FileDialog(this);
        fd.setTitle("CHOOSE PICTURE");
        fd.setMultipleMode(false);
        fd.show();
        if (fd.getFile() == null) {
            JOptionPane.showMessageDialog(rootPane, "No picture Selected");
            Displayphoto.setIcon(null);
        } else {
            String path = fd.getDirectory() + fd.getFile();
            ImageIcon imageicon = new ImageIcon(path);
            Image imagesize = imageicon.getImage().getScaledInstance(Displayphoto.getWidth(), Displayphoto.getHeight(), Image.SCALE_SMOOTH);
            Displayphoto.setIcon(new ImageIcon(imagesize));
            try {
                File image = new File(path);
                FileInputStream fis = new FileInputStream(image);
                ByteArrayOutputStream bos = new ByteArrayOutputStream();
                byte[] buf = new byte[1024];
                for (int readNum; (readNum = fis.read(buf)) != -1;) {
                    bos.write(buf, 0, readNum);
                }
                person_image2 = bos.toByteArray();
               
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_FR1btnchooseActionPerformed

    private void FR1CBstateItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_FR1CBstateItemStateChanged
        // TODO add your handling code here:pst.close();
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            FR1CBlga.removeAllItems();
            setlga();
        }
    }//GEN-LAST:event_FR1CBstateItemStateChanged
private void verifyer(boolean verify){
    if(FR1txtname.getText().trim().isEmpty() | 
        FR1txtsurname.getText().trim().isEmpty() |
        FR1txtothername.getText().trim().isEmpty()|
        FR1txtaddress.getText().trim().isEmpty() |
        FR1txtaddress.getText().trim().isEmpty() |
        FR1txtphone.getText().trim().isEmpty()){
    JOptionPane.showMessageDialog(rootPane, "Please fill the required feilds");
    }else{
       verify = false;  
    }
}
    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        //if (!fdl.equals(FR1txtID.getText().substring(0, FR1txtID.getText().length() - 3))) {
          //  JOptionPane.showMessageDialog(rootPane, "Invalid ID");
        //} else 
        if(
        FR1txtname.getText().trim().isEmpty() | 
        FR1txtsurname.getText().trim().isEmpty() |
        FR1txtaddress.getText().trim().isEmpty() |
        FR1txtaddress.getText().trim().isEmpty() |
        FR1txtphone.getText().trim().isEmpty()){
        JOptionPane.showMessageDialog(rootPane, "Please fill the required feilds");}
        else{
            Date now = new Date();
            SimpleDateFormat sd12 = new SimpleDateFormat("dd/mm/YYYY");
            String dateReg = (sd12.format(now));
            try {
                // TODO add your handling code here:
                String Query = "INSERT INTO BIO_DATA(id, first_name, surname, other_name, sex, dob, state, lga, address, phone, email, photo, date_reg, session, department, st_level)VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                PreparedStatement psInsUser = conn.prepareStatement(Query);
                psInsUser.setString(1, FR1txtID.getText());
                psInsUser.setString(2, FR1txtname.getText().toUpperCase());
                psInsUser.setString(3, FR1txtsurname.getText().toUpperCase());
                psInsUser.setString(4, FR1txtothername.getText().toUpperCase());
                String gender;
                if (RbtnMale.isSelected()) {
                    gender = "Male";
                } else {
                    gender = "Female";
                }
                String CBdate = FR1CBday.getSelectedItem().toString() + "/" + FR1CBmonth.getSelectedItem().toString() + "/" + FR1CByear.getSelectedItem().toString();
                psInsUser.setString(5, gender);
                psInsUser.setString(6, CBdate);
                psInsUser.setString(7, FR1CBstate.getSelectedItem().toString());
                psInsUser.setString(8, FR1CBlga.getSelectedItem().toString().toUpperCase());
                psInsUser.setString(9, FR1txtaddress.getText().toUpperCase());
                psInsUser.setString(10, FR1txtphone.getText());
                psInsUser.setString(11, FR1txtemail.getText());
                psInsUser.setBytes(12, person_image2);
                psInsUser.setString(13, dateReg);
                psInsUser.setString(14, CBsession.getSelectedItem().toString());
                psInsUser.setString(15, CBdepartment.getSelectedItem().toString());
                psInsUser.setString(16, CBlevel.getSelectedItem().toString());
                psInsUser.executeUpdate();
                JOptionPane.showMessageDialog(rootPane, "Saved");
                reset();
                FR1tableshow();
                refresh1();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex);
            }
        }
    }//GEN-LAST:event_btnsaveActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        // TODO add your handling code here:
        if (FR1txtID.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "No Selec");
        } else if(
        FR1txtname.getText().trim().isEmpty() | 
        FR1txtsurname.getText().trim().isEmpty() |
        FR1txtaddress.getText().trim().isEmpty() |
        FR1txtaddress.getText().trim().isEmpty() |
        FR1txtphone.getText().trim().isEmpty()){
        JOptionPane.showMessageDialog(rootPane, "Please fill the required feilds");
        }else{
            Date now = new Date();
            SimpleDateFormat sd12 = new SimpleDateFormat("dd/mm/YYYY");
            String dateReg = (sd12.format(now));
            String gender;
            if (RbtnMale.isSelected()) {
                gender = "Male";
            } else {
                gender = "Female";
            }
            try {
                // TODO add your handling code here:
                String Query = "UPDATE BIO_DATA SET first_name=?, surname=?, other_name=?, sex=?, dob=?, state=?, lga=?, address=?, phone=?, email=?, photo=?, date_reg=?, session=?, department=?, st_level=? WHERE id = ?";
                PreparedStatement updUser = conn.prepareStatement(Query);
                updUser.setString(1, FR1txtname.getText().toUpperCase());
                updUser.setString(2, FR1txtsurname.getText().toUpperCase());
                updUser.setString(3, FR1txtothername.getText().toUpperCase());
                String CBdate = FR1CBday.getSelectedItem().toString() + "/" + FR1CBmonth.getSelectedItem().toString() + "/" + FR1CByear.getSelectedItem().toString();
                updUser.setString(4, gender);
                updUser.setString(5, CBdate);
                updUser.setString(6, FR1CBstate.getSelectedItem().toString());
                updUser.setString(7, FR1CBlga.getSelectedItem().toString().toUpperCase());
                updUser.setString(8, FR1txtaddress.getText().toUpperCase());
                updUser.setString(9, FR1txtphone.getText());
                updUser.setString(10, FR1txtemail.getText());
                if (person_image2 == null || !"".equals(Displayphoto.getText())) {
                    try {
                        PreparedStatement ps = conn.prepareStatement("select photo from BIO_DATA where id ='" + FR1txtID.getText() + "'");
                        ResultSet rs = ps.executeQuery();
                        while (rs.next()) {
                            if (rs.getBytes(1) != null) {
                                person_image2 = rs.getBytes(1);
                            }
                        }
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(rootPane, "Fail to load Image retry");
                    }
                } else {
                }
                updUser.setBytes(11, person_image2);
                updUser.setString(12, dateReg);
                updUser.setString(13, CBsession.getSelectedItem().toString());
                updUser.setString(14, CBdepartment.getSelectedItem().toString());
                updUser.setString(15, CBlevel.getSelectedItem().toString());
                updUser.setString(16, FR1txtID.getText());
                updUser.executeUpdate();
                JOptionPane.showMessageDialog(rootPane, "Updated");
                reset();
                FR1tableshow();
                person_image2 = null;
                refresh1();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex);

            }
        }
    }//GEN-LAST:event_btnupdateActionPerformed

    private void FR1tbshowMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FR1tbshowMouseClicked
        // TODO add your handling code here: FR1tbshow.getSelectedRow()
        if (FR1tbshow.getSelectedRow() < 0) {
        } else {
            FR1txtID.setText(FR1tbshow.getValueAt(FR1tbshow.getSelectedRow(), 0).toString());
            String Sqlite = "SELECT first_name, surname, other_name, sex, dob, state, lga, address, phone, email, photo, session, department, st_level from BIO_DATA WHERE id = '" + FR1txtID.getText() + "'";

            try {
                Statement pps = conn.createStatement();
                ResultSet rss = pps.executeQuery(Sqlite);
                while (rss.next()) {

                    FR1txtname.setText(rss.getString(1));
                    FR1txtsurname.setText(rss.getString(2));
                    FR1txtothername.setText(rss.getString(3));
                    if ("Male".equals(rss.getString(4))) {
                        RbtnMale.setSelected(true);
                    } else {
                        Rbtnfemale.setSelected(true);
                    }
                    StringTokenizer token = new StringTokenizer(rss.getString(5), "/");
                    FR1CBday.setSelectedItem(token.nextToken());
                    FR1CBmonth.setSelectedItem(token.nextToken());
                    FR1CByear.setSelectedItem(token.nextToken());
                    FR1CBstate.setSelectedItem(rss.getString(6));
                    FR1CBlga.setSelectedItem(rss.getString(7));
                    FR1txtaddress.setText(rss.getString(8));
                    FR1txtphone.setText(rss.getString(9));
                    FR1txtemail.setText(rss.getString(10));
                    byte[] pics = rss.getBytes(11);
                    if (pics != null) {
                        ImageIcon imageicon = new ImageIcon(pics);
                        Image imagesize = imageicon.getImage().getScaledInstance(Displayphoto.getWidth(), Displayphoto.getHeight(), Image.SCALE_SMOOTH);
                        Displayphoto.setIcon(new ImageIcon(imagesize));
                    } else {
                        Displayphoto.setIcon(null);
                    }

                    CBsession.setSelectedItem(rss.getString(12));
                    CBdepartment.setSelectedItem(rss.getString(13));
                    CBlevel.setSelectedItem(rss.getString(14));

                    pps.close();
                    rss.close();

                }
            } catch (SQLException ex) {
                Logger.getLogger(Add_new_Student.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_FR1tbshowMouseClicked

    private void FR1btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FR1btnDeleteActionPerformed
        // TODO add your handling code here:
        String[] option = {"YES", "NO", "CANCEL"};

        int respone = JOptionPane.showOptionDialog(null, "Are you sure to Delete", "Comfirm", 0, JOptionPane.QUESTION_MESSAGE, null, option, option[1]);
        if (respone > 0) {

        } else {
            String Query = "delete from BIO_DATA where id = '" + FR1txtID.getText() + "'";
            String Query2 = "delete from SCORE where id = '" + FR1txtID.getText() + "'";
            try {
                PreparedStatement delUser = conn.prepareStatement(Query);
                PreparedStatement delUser2 = conn.prepareStatement(Query2);
                int a = delUser.executeUpdate();
                if (a > 0) {
                    delUser2.execute();
                    JOptionPane.showMessageDialog(rootPane, "Deleted");
                    reset();
                    FR1tableshow();
                    refresh1();
                }
            } catch (SQLException ex) {
                Logger.getLogger(Add_new_Student.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_FR1btnDeleteActionPerformed


    private void FR1txtIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FR1txtIDKeyTyped
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_FR1txtIDKeyTyped

    private void FR1txtphoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FR1txtphoneKeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_FR1txtphoneKeyTyped

    private void btnNewCandidiateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewCandidiateActionPerformed
        // TODO add your handling code here:
        reset();
    }//GEN-LAST:event_btnNewCandidiateActionPerformed
    private void reset() {
        FR1txtID.setText("");
        FR1txtname.setText("");
        FR1txtsurname.setText("");
        FR1txtothername.setText("");
        RbtnMale.setSelected(true);
        FR1CBday.setSelectedIndex(0);
        FR1CBmonth.setSelectedIndex(0);
        FR1CByear.setSelectedIndex(0);
        FR1CBstate.setSelectedIndex(0);
        FR1CBlga.setSelectedIndex(0);
        FR1txtaddress.setText("");
        FR1txtphone.setText("");
        FR1txtemail.setText("");
        Displayphoto.setIcon(null);
        id();
    }
    private void btnSaveDepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveDepActionPerformed
        // TODO add your handling code here:
        Date now = new Date();
        SimpleDateFormat sd12 = new SimpleDateFormat("dd/MM/yyyy");

        if (txtDepName.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Department name is required");
            txtDepName.requestFocus();
        } else if (txtAbbr.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Department Abbreviation name is required");
            txtAbbr.requestFocus();
        } else {
            String sql = "INSERT INTO DEPARTMENT(dep_name, Dep_sort, date_added)VALUES(?,?,?)";
            try {
                PreparedStatement psinsd = conn.prepareStatement(sql);
                psinsd.setString(1, txtDepName.getText().toUpperCase());
                psinsd.setString(2, txtAbbr.getText().toUpperCase());
                psinsd.setString(3, sd12.format(now));
                psinsd.executeUpdate();
                FR2tableshowDep();
                JOptionPane.showMessageDialog(rootPane, "Saved");
                txtDepName.setText("");
                txtAbbr.setText("");
                refresh();
            } catch (SQLException sQLException) {
                System.err.println(sQLException);
            }
        }

    }//GEN-LAST:event_btnSaveDepActionPerformed

    private void btnUpdateDepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateDepActionPerformed
        // TODO add your handling code here:
        if (FR2tblShowDep.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(rootPane, "No record selected");
            FR2tblShowDep.requestFocus();
        } else if (txtDepName.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Department name is required");
            txtDepName.requestFocus();
        } else if (txtAbbr.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Department Abbreviation name is required");
            txtAbbr.requestFocus();
        } else {
            String UpdateDep = "UPDATE DEPARTMENT SET dep_name = ?, Dep_sort = ? WHERE Dep_sort = ?";
            try {
                PreparedStatement pstUp = conn.prepareStatement(UpdateDep);
                pstUp.setString(1, txtDepName.getText().toUpperCase());
                pstUp.setString(2, txtAbbr.getText().toUpperCase());
                pstUp.setString(3, FR2tblShowDep.getValueAt(FR2tblShowDep.getSelectedRow(), 1).toString());
                pstUp.executeUpdate();
                JOptionPane.showMessageDialog(rootPane, "Updated.");
                txtDepName.setText("");
                txtAbbr.setText("");
                FR2tableshowDep();
                refresh();
            } catch (SQLException sQLEx) {
                System.err.println(sQLEx);
            }
        }
    }//GEN-LAST:event_btnUpdateDepActionPerformed

    private void FR2tblShowDepMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FR2tblShowDepMouseClicked
        // TODO add your handling code here:
        txtDepName.setText(FR2tblShowDep.getValueAt(FR2tblShowDep.getSelectedRow(), 0).toString());
        txtAbbr.setText(FR2tblShowDep.getValueAt(FR2tblShowDep.getSelectedRow(), 1).toString());
    }//GEN-LAST:event_FR2tblShowDepMouseClicked

    private void btnDelDepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelDepActionPerformed
        // TODO add your handling code here:
        String[] option = {"YES", "NO", "CANCEL"};

        if (FR2tblShowDep.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(rootPane, "No record Selected");
        } else {
            int respone = JOptionPane.showOptionDialog(null, "Do you want to Delete", "Comfirm", 0, JOptionPane.QUESTION_MESSAGE, null, option, option[1]);
            if (respone == 0) {
                String delSQL = "DELETE FROM DEPARTMENT WHERE Dep_sort = ?";
                try {
                    PreparedStatement delDep = conn.prepareStatement(delSQL);
                    delDep.setString(1, FR2tblShowDep.getValueAt(FR2tblShowDep.getSelectedRow(), 1).toString());
                    delDep.execute();
                    JOptionPane.showMessageDialog(rootPane, "Deleted");
                    txtDepName.setText("");
                    txtAbbr.setText("");
                    FR2tableshowDep();
                    refresh();
                } catch (SQLException ex) {
                    System.err.println(ex);
                }
            } else {
            }
        }

    }//GEN-LAST:event_btnDelDepActionPerformed

    private void btnSaveCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveCourseActionPerformed
        // TODO add your handling code here
        if (txtCourseName.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Course name is required");
            txtCourseName.requestFocus();
            
        } else if (txtCourseCode.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Course Code is required");
            txtCourseCode.requestFocus();
            
        } else if((int) jSpUnit.getValue() < 0){
            JOptionPane.showMessageDialog(rootPane, "Invalid Course Unit");
            jSpUnit.requestFocus();
        }else{
            String sql = "INSERT INTO COURSE(course_name, course_Abvr, Course_unit, department, session, st_level, semester )VALUES(?,?,?,?,?,?,?)";
            try {
                PreparedStatement pstinsc = conn.prepareStatement(sql);
                pstinsc.setString(1, txtCourseName.getText().toUpperCase());
                pstinsc.setString(2, txtCourseCode.getText().toUpperCase());
                pstinsc.setInt(3, (int)jSpUnit.getValue());
                pstinsc.setString(4, FR3CBDepartment.getSelectedItem().toString());
                pstinsc.setString(5, FR3CBSession.getSelectedItem().toString());
                pstinsc.setString(6, FR3CBlevel.getSelectedItem().toString());
                pstinsc.setString(7, FR3CBSemester.getSelectedItem().toString());
                pstinsc.executeUpdate();
                JOptionPane.showMessageDialog(rootPane, "Saved");
                txtCourseName.setText("");
                txtCourseCode.setText("");
                
                FR3tableshowCourse();
                FR4tblshowNames();
            } catch (SQLException sQLException) {
                System.err.println(sQLException);
            }
        }

    }//GEN-LAST:event_btnSaveCourseActionPerformed

    private void btnUpdateCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateCourseActionPerformed
        // TODO add your handling code here:
        if (FR3tblCourse.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(rootPane, "No record selected");
        }else if (txtCourseName.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Course name is required");
            txtCourseName.requestFocus();
            
        } else if (txtCourseCode.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Course Code is required");
            txtCourseCode.requestFocus();
            
        } else if((int) jSpUnit.getValue() < 0){
            JOptionPane.showMessageDialog(rootPane, "Invalid Course Unit");
            jSpUnit.requestFocus();
        }else{
            String sql = "UPDATE COURSE SET course_name=?, course_Abvr=?, Course_unit=?, department=?, session=?, st_level=?, semester=? WHERE course_Abvr=? and department=? and session=? and st_level=? and semester=?";
            try {
                PreparedStatement psupt = conn.prepareStatement(sql);
                psupt.setString(1, txtCourseName.getText().toUpperCase());
                psupt.setString(2, txtCourseCode.getText().toUpperCase());
                psupt.setInt(3, (int)jSpUnit.getValue());
                psupt.setString(4, FR3CBDepartment.getSelectedItem().toString());
                psupt.setString(5, FR3CBSession.getSelectedItem().toString());
                psupt.setString(6, FR3CBlevel.getSelectedItem().toString());
                psupt.setString(7, FR3CBSemester.getSelectedItem().toString());

                psupt.setString(8, (String) FR3tblCourse.getValueAt(FR3tblCourse.getSelectedRow(), 1));
                psupt.setString(9, FR3CBDepartment.getSelectedItem().toString());
                psupt.setString(10, FR3CBSession.getSelectedItem().toString());
                psupt.setString(11, FR3CBlevel.getSelectedItem().toString());
                psupt.setString(12, FR3CBSemester.getSelectedItem().toString());
                psupt.executeUpdate();
                JOptionPane.showMessageDialog(rootPane, "Updated.");
                txtCourseName.setText("");
                txtCourseCode.setText("");
                FR3tableshowCourse();
                FR4tblshowNames();
            } catch (SQLException sQLException) {
                System.err.println(sQLException);
            }
        }
    }//GEN-LAST:event_btnUpdateCourseActionPerformed

    private void FR3tblCourseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FR3tblCourseMouseClicked
        // TODO add your handling code here:
        txtCourseName.setText(FR3tblCourse.getValueAt(FR3tblCourse.getSelectedRow(), 0).toString());
        txtCourseCode.setText(FR3tblCourse.getValueAt(FR3tblCourse.getSelectedRow(), 1).toString());
       
        jSpUnit.setValue(Integer.valueOf(FR3tblCourse.getValueAt(FR3tblCourse.getSelectedRow(), 2).toString()));

    }//GEN-LAST:event_FR3tblCourseMouseClicked

    private void btnResetCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetCourseActionPerformed
        // TODO add your handling code here:
        txtCourseName.setText("");
        txtCourseCode.setText("");

    }//GEN-LAST:event_btnResetCourseActionPerformed

    private void btnDeleteCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCourseActionPerformed
        // TODO add your handling code here:
        String[] option = {"YES", "NO", "CANCEL"};

        if (FR3tblCourse.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(rootPane, "No record selected");
        } else {
            int respone = JOptionPane.showOptionDialog(null, "Do you want to Delete", "Comfirm", 0, JOptionPane.QUESTION_MESSAGE, null, option, option[1]);
            if (respone > 0) {

            } else {
                String sql = "DELETE FROM COURSE WHERE course_Abvr=? and department=? and session=? and st_level=? and semester=?";
                try {
                    PreparedStatement psdel = conn.prepareStatement(sql);
                    psdel.setString(1, (String) FR3tblCourse.getValueAt(FR3tblCourse.getSelectedRow(), 1));
                    psdel.setString(2, FR3CBDepartment.getSelectedItem().toString());
                    psdel.setString(3, FR3CBSession.getSelectedItem().toString());
                    psdel.setString(4, FR3CBlevel.getSelectedItem().toString());
                    psdel.setString(5, FR3CBSemester.getSelectedItem().toString());
                    psdel.execute();
                    JOptionPane.showMessageDialog(rootPane, "Deleted.");
                    
                    txtCourseName.setText("");
                    txtCourseCode.setText("");
                    FR3tableshowCourse();
                    FR4tblshowNames();
                } catch (SQLException sQLException) {
                    System.err.println(sQLException);
                }
            }
        }
    }//GEN-LAST:event_btnDeleteCourseActionPerformed
private void getCourseUnit(){
    Statement stm;
    try {
        stm = conn.createStatement();
        ResultSet rs = stm.executeQuery("SELECT * from Grade");
        while(rs.next()){
            gA = rs.getDouble(1);
            gAB = rs.getDouble(2);
            gB = rs.getDouble(3);
            gBC = rs.getDouble(4);
            gC = rs.getDouble(5);
            gCD = rs.getDouble(6);
            gD = rs.getDouble(7);
            gE = rs.getDouble(8);
            gF = rs.getDouble(9);
            
        }
        
    } catch (SQLException sxe) {
        System.err.println(sxe);
    }
    
}
    private void btnSaveScoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveScoreActionPerformed
        // TODO add your handling code here:
        remark(0, 0, 0, 0);

    }//GEN-LAST:event_btnSaveScoreActionPerformed

    private void FR4tblshowRecNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FR4tblshowRecNameMouseClicked
        // TODO add your handling code here:
        ScoreName.setText(FR4tblshowRecName.getValueAt(FR4tblshowRecName.getSelectedRow(), 1).toString());
        FR4tblAddRec.setEnabled(true);
        btnSaveScore.setEnabled(true);
    }//GEN-LAST:event_FR4tblshowRecNameMouseClicked

    private void FR1txtIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FR1txtIDKeyPressed
        // TODO add your handling code here:
        if (FR1txtID.getText().length() == fdl.length()) {
            evt.consume();
        }
    }//GEN-LAST:event_FR1txtIDKeyPressed

    private void FR4tblshowRecName1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FR4tblshowRecName1MouseClicked
        // TODO add your handling code here:
        if (FR4tblshowRecName1.getRowCount() < 0) {

        } else {
            ScoreName1.setText(FR4tblshowRecName1.getValueAt(FR4tblshowRecName1.getSelectedRow(), 1).toString());
            DefaultTableModel model2 = (DefaultTableModel) FR4tblAddRec1.getModel();
            Object[] o = new Object[7];
            model2.setRowCount(0);
            String Sq = "SELECT Course_unit, course, CA, Exam, Total, Remarks, CGPA FROM SCORE WHERE id = '" + FR4tblshowRecName1.getValueAt(FR4tblshowRecName1.getSelectedRow(), 0).toString() + "'";
            try {
                Statement p = conn.createStatement();
                ResultSet r = p.executeQuery(Sq);
                while (r.next()) {
                    o[0] = r.getString(1);
                    o[1] = r.getString(2);
                    o[2] = r.getString(3);
                    o[3] = r.getString(4);
                    o[4] = r.getString(5);
                    o[5] = r.getString(6);
                    o[6] = r.getString(7);
                    model2.addRow(o);
                }
            } catch (SQLException sQLException) {
                System.err.println(sQLException);
            }
            btnUpdateScore.setEnabled(true);
            btnDeleScore.setEnabled(true);
        }
    }//GEN-LAST:event_FR4tblshowRecName1MouseClicked

    private void btnUpdateScoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateScoreActionPerformed
        // TODO add your handling code here:
        if (FR4tblshowRecName1.getSelectedRow() < 0) {

        } else {
            remark1(0, 0, 0, 0);
        }
    }//GEN-LAST:event_btnUpdateScoreActionPerformed

    private void btnDeleScoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleScoreActionPerformed
        // TODO add your handling code here:
        String selected = FR4tblshowRecName1.getValueAt(FR4tblshowRecName1.getSelectedRow(), 0).toString();
        String delScore = "Delete from SCORE WHERE id = '" + selected + "'";
        try {
            PreparedStatement delMyScore;
            delMyScore = conn.prepareStatement(delScore);
            delMyScore.execute();
            delMyScore.close();
            
            JOptionPane.showMessageDialog(rootPane, "Record Deleted Sucessful");
            yearUpdate(FR4tblshowRecName1.getValueAt(FR4tblshowRecName1.getSelectedRow(), 0).toString());
            FR4tblshowNames();
            FR4tblshowNames2();
            DefaultTableModel dm = (DefaultTableModel) FR4tblAddRec1.getModel();
            dm.setRowCount(0);
            btnSaveScore.setEnabled(false);
            FR4tblAddRec.setEnabled(false);
            PreparedStatement del_co;
            del_co = conn.prepareStatement("DELETE FROM CARRY_OVER WHERE id = '"+ selected +"'");
            del_co.executeUpdate();
            del_co.close();
        } catch (SQLException ex) {
            Logger.getLogger(Add_new_Student.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnDeleScoreActionPerformed

    private void btnSaveSettingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveSettingActionPerformed
        // TODO add your handling code here: 
        if (setDepartment.getItemCount() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Invalid Department");
        } else {
            String dep = setDepartment.getSelectedItem().toString();
            String ses = setSession.getSelectedItem().toString();
            String lev = setLevel.getSelectedItem().toString();
            String sem = jCbSEM.getSelectedItem().toString();
            try {
                PreparedStatement pss = conn.prepareStatement("UPDATE Settings SET d_dep = ?, d_session = ?, d_level = ?, d_semester = ?");
                pss.setString(1, dep);
                pss.setString(2, ses);
                pss.setString(3, lev);
                pss.setString(4, sem);
                pss.execute();
                refresh();
            } catch (SQLException ex) {
                Logger.getLogger(Add_new_Student.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnSaveSettingActionPerformed

    private void jLabel32MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel32MouseClicked
        // TODO add your handling code here:
        FrameaddCand.setVisible(true);

    }//GEN-LAST:event_jLabel32MouseClicked

    private void jLabel33MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel33MouseClicked
        // TODO add your handling code here:

        FrameAddDep.setVisible(true);
    }//GEN-LAST:event_jLabel33MouseClicked

    private void jLabel34MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel34MouseClicked
        // TODO add your handling code here:
        FrameAddCourse.setVisible(true);
    }//GEN-LAST:event_jLabel34MouseClicked

    private void jLabel35MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel35MouseClicked
        // TODO add your handling code here:
        FrameAddNewScore.setVisible(true);
    }//GEN-LAST:event_jLabel35MouseClicked

    private void jLabel36MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel36MouseClicked
        // TODO add your handling code here:
        FrameAddExScore.setVisible(true);
    }//GEN-LAST:event_jLabel36MouseClicked

    private void jLabel37MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel37MouseClicked
        // TODO add your handling code here:
        FrameSettings.setVisible(true);
    }//GEN-LAST:event_jLabel37MouseClicked

    private void FrameaddCandInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_FrameaddCandInternalFrameClosing
        // TODO add your handling code here:           
        reset();
        refresh1();

    }//GEN-LAST:event_FrameaddCandInternalFrameClosing

    private void txtsearch1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearch1KeyReleased
        // TODO add your handling code here:
        DefaultTableModel table = (DefaultTableModel) FR1tbshow.getModel();
        String search = txtsearch1.getText().toUpperCase();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<>(table);
        FR1tbshow.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_txtsearch1KeyReleased

    private void txtSearch2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearch2KeyReleased
        // TODO add your handling code here:
        DefaultTableModel table = (DefaultTableModel) FR4tblshowRecName.getModel();
        String search = txtSearch2.getText().toUpperCase();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<>(table);
        FR4tblshowRecName.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
    }//GEN-LAST:event_txtSearch2KeyReleased

    private void txtSearch3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearch3KeyReleased
        // TODO add your handling code here:
        DefaultTableModel table = (DefaultTableModel) FR4tblshowRecName1.getModel();
        String search = txtSearch3.getText().toUpperCase();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<>(table);
        FR4tblshowRecName1.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));

    }//GEN-LAST:event_txtSearch3KeyReleased

    private void jLabel50MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel50MouseClicked
        // TODO add your handling code here:
        DASHBOARD.setVisible(true);
    }//GEN-LAST:event_jLabel50MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            //java.util.logging.Logger.getLogger(Add_new_Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Add_new_Student().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox CBdepartment;
    private javax.swing.JComboBox CBlevel;
    public static javax.swing.JComboBox CBsession;
    private javax.swing.JInternalFrame DASHBOARD;
    private javax.swing.JLabel Displayphoto;
    private javax.swing.JComboBox FR1CBday;
    private javax.swing.JComboBox FR1CBlga;
    private javax.swing.JComboBox FR1CBmonth;
    private javax.swing.JComboBox FR1CBstate;
    private javax.swing.JComboBox FR1CByear;
    private javax.swing.JButton FR1btnDelete;
    private javax.swing.JButton FR1btnchoose;
    private javax.swing.JTable FR1tbshow;
    private javax.swing.JTextField FR1txtID;
    private javax.swing.JTextField FR1txtaddress;
    private javax.swing.JTextField FR1txtemail;
    private javax.swing.JTextField FR1txtname;
    private javax.swing.JTextField FR1txtothername;
    private javax.swing.JTextField FR1txtphone;
    private javax.swing.JTextField FR1txtsurname;
    private javax.swing.JTable FR2tblShowDep;
    private javax.swing.JComboBox FR3CBDepartment;
    private javax.swing.JComboBox FR3CBSemester;
    private javax.swing.JComboBox FR3CBSession;
    private javax.swing.JComboBox FR3CBlevel;
    private javax.swing.JTable FR3tblCourse;
    private javax.swing.JTable FR4tblAddRec;
    private javax.swing.JTable FR4tblAddRec1;
    private javax.swing.JTable FR4tblshowRecName;
    private javax.swing.JTable FR4tblshowRecName1;
    private javax.swing.JInternalFrame FrameAddCourse;
    private javax.swing.JInternalFrame FrameAddDep;
    private javax.swing.JInternalFrame FrameAddExScore;
    private javax.swing.JInternalFrame FrameAddNewScore;
    private javax.swing.JInternalFrame FrameSettings;
    private javax.swing.JInternalFrame FrameaddCand;
    private javax.swing.JRadioButton RbtnMale;
    private javax.swing.JRadioButton Rbtnfemale;
    private javax.swing.JLabel ScoreName;
    private javax.swing.JLabel ScoreName1;
    private javax.swing.JButton btnDelDep;
    private javax.swing.JButton btnDeleScore;
    private javax.swing.JButton btnDeleteCourse;
    private javax.swing.JButton btnNewCandidiate;
    private javax.swing.JButton btnResetCourse;
    private javax.swing.JButton btnSaveCourse;
    private javax.swing.JButton btnSaveDep;
    private javax.swing.JButton btnSaveScore;
    private javax.swing.JButton btnSaveSetting;
    private javax.swing.JButton btnUpdateCourse;
    private javax.swing.JButton btnUpdateDep;
    private javax.swing.JButton btnUpdateScore;
    private javax.swing.JButton btnsave;
    private javax.swing.JButton btnupdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox jCbSEM;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSpinner jSpUnit;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar3;
    private javax.swing.JLabel lblTGPA;
    private javax.swing.JLabel lblTGPA1;
    private javax.swing.JLabel lblTU;
    private javax.swing.JLabel lblTU1;
    private static javax.swing.JComboBox setDepartment;
    private javax.swing.JComboBox setLevel;
    public static javax.swing.JComboBox setSession;
    private javax.swing.JLabel settingDep;
    private javax.swing.JLabel settingDep2;
    private javax.swing.JLabel settingDep3;
    private javax.swing.JLabel settingDep4;
    private javax.swing.JLabel settingDep6;
    private javax.swing.JLabel settingLevel;
    private javax.swing.JLabel settingSemester;
    private javax.swing.JLabel settingSession;
    private javax.swing.JTable tblDashboard;
    private javax.swing.JTextField txtAbbr;
    private javax.swing.JTextField txtCourseCode;
    private javax.swing.JTextField txtCourseName;
    private javax.swing.JTextField txtDepName;
    private javax.swing.JTextField txtSearch2;
    private javax.swing.JTextField txtSearch3;
    private javax.swing.JTextField txtsearch1;
    // End of variables declaration//GEN-END:variables
private void setState() {
        PreparedStatement pstate;
        ResultSet rs;
        String sql = "SELECT distinct `STATE` FROM `Comboselector`";
        try {
            pstate = conn.prepareStatement(sql);
            rs = pstate.executeQuery();
            while (rs.next()) {
                String abc = rs.getString(1);
                FR1CBstate.addItem(abc);

            }
            pstate.close();
            rs.close();
        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }

    private void setlga() {
        String lga = FR1CBstate.getSelectedItem().toString();
        PreparedStatement pslga;
        ResultSet rs;
        String sql = "SELECT distinct `LGA` FROM `comboselector` WHERE STATE = '" + lga + "'";
        try {
            pslga = conn.prepareStatement(sql);
            rs = pslga.executeQuery();
            while (rs.next()) {
                String abc = rs.getString(1);
                FR1CBlga.addItem(abc);
            }
            pslga.close();
            rs.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }

    private void FR1tableshow() {
        DefaultTableModel model = (DefaultTableModel) FR1tbshow.getModel();
        model.setRowCount(0);
        Object[] obj = new Object[2];
        try {
            Statement sst = conn.createStatement();
            ResultSet rrs = sst.executeQuery("select id, first_name, surname, other_name from BIO_DATA WHERE session = '" + settingSession.getText() + "' and department = '" + settingDep.getText() + "' and st_level = '" + settingLevel.getText() + "'");
            while (rrs.next()) {
                obj[0] = rrs.getString(1);
                obj[1] = rrs.getString(2) + " " + rrs.getString(3) + " " + rrs.getString(4);
                model.addRow(obj);

            }
        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }

    private void FR2tableshowDep() {
        DefaultTableModel mshowDep = (DefaultTableModel) FR2tblShowDep.getModel();
        mshowDep.setRowCount(0);
        Object[] obj = new Object[3];
        try {
            Statement sstt = conn.createStatement();
            ResultSet rrss = sstt.executeQuery("select dep_name, dep_sort, date_added from DEPARTMENT");
            while (rrss.next()) {
                obj[0] = rrss.getString(1);
                obj[1] = rrss.getString(2);
                obj[2] = rrss.getString(3);
                mshowDep.addRow(obj);

            }
        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }

    private void FR3tableshowCourse() {
        DefaultTableModel mshowCourse = (DefaultTableModel) FR3tblCourse.getModel();
        mshowCourse.setRowCount(0);
        Object[] obj = new Object[3];
        try {
            Statement s = conn.createStatement();
            ResultSet r = s.executeQuery("select course_name, course_Abvr, Course_unit from COURSE WHERE department = '" + settingDep.getText() + "' and session ='" + settingSession.getText() + "' and st_level = '" + settingLevel.getText() + "' and semester = '" + settingSemester.getText() + "'");
            while (r.next()) {
                obj[0] = r.getString(1);
                obj[1] = r.getString(2);
                obj[2] = r.getString(3);
                mshowCourse.addRow(obj);

            }
        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }

    private void FR4tblshowNames() {
        String RecInserted = "";

        if ("1st SEMESTER".equals(settingSemester.getText()) && "ND".equals(settingLevel.getText())) {
            RecInserted = "SR1";
        } else if ("2nd SEMESTER".equals(settingSemester.getText()) && "ND".equals(settingLevel.getText())) {
            RecInserted = "SR2";
        } else if ("3rd SEMESTER".equals(settingSemester.getText()) && "ND".equals(settingLevel.getText())) {
            RecInserted = "SR3";
        } else if ("4th SEMESTER".equals(settingSemester.getText()) && "ND".equals(settingLevel.getText())) {
            RecInserted = "SR4";
        } else if ("1st SEMESTER".equals(settingSemester.getText()) && "HND".equals(settingLevel.getText())) {
            RecInserted = "SR5";
        } else if ("2nd SEMESTER".equals(settingSemester.getText()) && "HND".equals(settingLevel.getText())) {
            RecInserted = "SR6";
        } else if ("3rd SEMESTER".equals(settingSemester.getText()) && "HND".equals(settingLevel.getText())) {
            RecInserted = "SR7";
        } else if ("4th SEMESTER".equals(settingSemester.getText()) && "HND".equals(settingLevel.getText())) {
            RecInserted = "SR8";
        }

        DefaultTableModel mshowName = (DefaultTableModel) FR4tblshowRecName.getModel();
        mshowName.setRowCount(0);
        Object[] obj = new Object[3];

        try {
            Statement stm = conn.createStatement();
            try (ResultSet rls = stm.executeQuery("SELECT id, first_name, surname, other_name, sex from BIO_DATA WHERE session = '" + settingSession.getText() + "' and department = '" + settingDep.getText() + "' and st_level = '" + settingLevel.getText() + "' and " + RecInserted + " = 'false'")) {
                while (rls.next()) {
                    obj[0] = rls.getString(1);
                    obj[1] = rls.getString(2) + " " + rls.getString(3) + " " + rls.getString(4);
                    obj[2] = rls.getString(5);
                    mshowName.addRow(obj);
                }
            }

            DefaultTableModel mshowCourseList = (DefaultTableModel) FR4tblAddRec.getModel();
            mshowCourseList.setRowCount(0);
            Object[] ob = new Object[2];

            Statement stm2 = conn.createStatement();
            ResultSet rls2 = stm2.executeQuery("SELECT Course_unit, course_Abvr FROM COURSE WHERE department = '" + settingDep.getText() + "' and session = '" + settingSession.getText() + "' and st_level = '" + settingLevel.getText() + "' and semester = '" + settingSemester.getText() + "'");
            while (rls2.next()) {
                ob[0] = rls2.getString(1);
                ob[1] = rls2.getString(2);
                mshowCourseList.addRow(ob);
            }
            //PreparedStatement pr = conn.prepareStatement("UPDATE BIO_DATA SET "+RecInserted+"=true WHERE id = '"+FR4tblshowRecName.getValueAt(FR4tblshowRecName.getSelectedRow(), 0)+"'");
        } catch (SQLException ex) {
            System.out.println(ex);
        }

    }

 private void remark(int b, int c, int l1, int l2) {
        String CA = null, Exam = null, Excep1 = null;
        for (int i = 0; i < FR4tblAddRec.getRowCount(); i++) {
            try {
                CA = FR4tblAddRec.getValueAt(b++, 2).toString();
                Exam = FR4tblAddRec.getValueAt(c++, 3).toString();

            } catch (NullPointerException n) {
                if (CA == null | Exam == null) {
                    FR4tblAddRec.setValueAt(0, l1++, 2);
                    FR4tblAddRec.setValueAt(0, l2++, 3);
                    
                }
                Excep1 = n.toString();
            }
        }
        int com, CCA, ex, rowT = 4, rowG = 5;

        try {
            for (int i = 0; i < FR4tblAddRec.getRowCount(); i++) {
                CCA = Integer.valueOf(FR4tblAddRec.getValueAt(i, 2).toString());
                ex = Integer.valueOf(FR4tblAddRec.getValueAt(i, 3).toString());
                com = CCA + ex;
                if(com > 100){
                    
                    FR4tblAddRec.setValueAt(com, i, rowT);
                    FR4tblAddRec.setValueAt("ERROR", i, rowG);
                    return;
                } 
                else if (com >= 90) {
                    FR4tblAddRec.setValueAt(com, i, rowT);
                    FR4tblAddRec.setValueAt("A", i, rowG);
                    
                } else if (com >= 85) {
                    FR4tblAddRec.setValueAt(com, i, rowT);
                    FR4tblAddRec.setValueAt("AB", i, rowG);
                    
                } else if (com >= 70) {
                    
                    FR4tblAddRec.setValueAt(com, i, rowT);
                    FR4tblAddRec.setValueAt("B", i, rowG);
                } else if (com >= 65) {
                    
                    FR4tblAddRec.setValueAt(com, i, rowT);
                    FR4tblAddRec.setValueAt("BC", i, rowG);
                    
                } else if (com >= 50) {
                   
                    FR4tblAddRec.setValueAt(com, i, rowT);
                     FR4tblAddRec.setValueAt("C", i, rowG);
                } else if (com >= 45) {
                    
                    FR4tblAddRec.setValueAt(com, i, rowT);
                    FR4tblAddRec.setValueAt("CD", i, rowG);
                } else if (com >= 40) {
                   
                    FR4tblAddRec.setValueAt(com, i, rowT);
                     FR4tblAddRec.setValueAt("D", i, rowG);
                } else if (com >= 35) {
                    
                    FR4tblAddRec.setValueAt(com, i, rowT);
                    FR4tblAddRec.setValueAt("E", i, rowG);
                    
                } else if(com < 35){
                    
                    FR4tblAddRec.setValueAt(com, i, rowT);
                    FR4tblAddRec.setValueAt("F", i, rowG);
                    
                } 
            }
            
        } catch (Exception e) {
            Excep1 = e.toString();
        }
        if (Excep1 == null) {
         grader();
        ahmad(0, 0);
        adder(0, 0);
            pushScores(0,0,0,0,0,0,0);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Please fill all record correctly");
        }
        // Excep1 = null;
    }

    private void pushScores(int post, int post2, int post3, int post4, int post5, int post6, int post7) {

        Date current = new Date();
        SimpleDateFormat sd = new SimpleDateFormat("dd/MM/YYYY - hh:mm:ss");
        String sql = "INSERT INTO SCORE(id, semester, Course_unit, course, CA, Exam, Total, Remarks, CGPA, date_inserted )VALUES(?,?,?,?,?,?,?,?,?,?)";

        for (int n = 0; n < FR4tblAddRec.getRowCount(); n++) {
            try {

                PreparedStatement pscore = conn.prepareStatement(sql);
                pscore.setString(1, FR4tblshowRecName.getValueAt(FR4tblshowRecName.getSelectedRow(), 0).toString());
                pscore.setString(2, settingSemester.getText());
                pscore.setString(3, FR4tblAddRec.getValueAt(post++, 0).toString());
                pscore.setString(4, FR4tblAddRec.getValueAt(post2++, 1).toString());
                pscore.setString(5, FR4tblAddRec.getValueAt(post3++, 2).toString());
                pscore.setString(6, FR4tblAddRec.getValueAt(post4++, 3).toString());
                pscore.setString(7, FR4tblAddRec.getValueAt(post5++, 4).toString());
                pscore.setString(8, FR4tblAddRec.getValueAt(post6++, 5).toString());
                pscore.setString(9, FR4tblAddRec.getValueAt(post7++, 6).toString());
                pscore.setString(10, sd.format(current));
                pscore.executeUpdate();
            } catch (SQLException sQLException) {
                System.err.println(sQLException);
            }
        }
        update(FR4tblshowRecName.getValueAt(FR4tblshowRecName.getSelectedRow(), 0).toString());
        JOptionPane.showMessageDialog(rootPane, "Saved");
        carryover(0, 0, 0, 0, 0);
        refresh1();
        btnSaveScore.setEnabled(false);
        FR4tblAddRec.setEnabled(false);
    }

    private void update(String idnumber) {
        String mark = null;

        if ("1st SEMESTER".equals(settingSemester.getText()) && "ND".equals(settingLevel.getText())) {
            mark = "SR1";
        } else if ("2nd SEMESTER".equals(settingSemester.getText()) && "ND".equals(settingLevel.getText())) {
            mark = "SR2";
        } else if ("3rd SEMESTER".equals(settingSemester.getText()) && "ND".equals(settingLevel.getText())) {
            mark = "SR3";
        } else if ("4th SEMESTER".equals(settingSemester.getText()) && "ND".equals(settingLevel.getText())) {
            mark = "SR4";
        } else if ("1st SEMESTER".equals(settingSemester.getText()) && "HND".equals(settingLevel.getText())) {
            mark = "SR5";
        } else if ("2nd SEMESTER".equals(settingSemester.getText()) && "HND".equals(settingLevel.getText())) {
            mark = "SR6";
        } else if ("3rd SEMESTER".equals(settingSemester.getText()) && "HND".equals(settingLevel.getText())) {
            mark = "SR7";
        } else if ("4th SEMESTER".equals(settingSemester.getText()) && "HND".equals(settingLevel.getText())) {
            mark = "SR8";
        }
        String SQuery = "UPDATE BIO_DATA SET " + mark + " = 'true' WHERE id = '" + idnumber + "'";
        try {
            PreparedStatement pss = conn.prepareStatement(SQuery);
            pss.execute();
        } catch (SQLException ex) {
            Logger.getLogger(Add_new_Student.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void yearUpdate(String idnum) {
        String Unmark = null;

        if ("1st SEMESTER".equals(settingSemester.getText()) && "ND".equals(settingLevel.getText())) {
            Unmark = "SR1";
        } else if ("2nd SEMESTER".equals(settingSemester.getText()) && "ND".equals(settingLevel.getText())) {
            Unmark = "SR2";
        } else if ("3rd SEMESTER".equals(settingSemester.getText()) && "ND".equals(settingLevel.getText())) {
            Unmark = "SR3";
        } else if ("4th SEMESTER".equals(settingSemester.getText()) && "ND".equals(settingLevel.getText())) {
            Unmark = "SR4";
        } else if ("1st SEMESTER".equals(settingSemester.getText()) && "HND".equals(settingLevel.getText())) {
            Unmark = "SR5";
        } else if ("2nd SEMESTER".equals(settingSemester.getText()) && "HND".equals(settingLevel.getText())) {
            Unmark = "SR6";
        } else if ("3rd SEMESTER".equals(settingSemester.getText()) && "HND".equals(settingLevel.getText())) {
            Unmark = "SR7";
        } else if ("4th SEMESTER".equals(settingSemester.getText()) && "HND".equals(settingLevel.getText())) {
            Unmark = "SR8";
        }
        String SQuery = "UPDATE BIO_DATA SET " + Unmark + " = 'false' WHERE id = '" + idnum + "'";
        try {
            PreparedStatement pss = conn.prepareStatement(SQuery);
            pss.execute();
        } catch (SQLException ex) {
            Logger.getLogger(Add_new_Student.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void FR4tblshowNames2() {
        String RecInserted = null;
//1st SEMESTER, 2nd SEMESTER, 3rd SEMESTER, 4th SEMESTER
        if ("1st SEMESTER".equals(settingSemester.getText()) && "ND".equals(settingLevel.getText())) {
            RecInserted = "SR1";
        } else if ("2nd SEMESTER".equals(settingSemester.getText()) && "ND".equals(settingLevel.getText())) {
            RecInserted = "SR2";
        } else if ("3rd SEMESTER".equals(settingSemester.getText()) && "ND".equals(settingLevel.getText())) {
            RecInserted = "SR3";
        } else if ("4th SEMESTER".equals(settingSemester.getText()) && "ND".equals(settingLevel.getText())) {
            RecInserted = "SR4";
        } else if ("1st SEMESTER".equals(settingSemester.getText()) && "HND".equals(settingLevel.getText())) {
            RecInserted = "SR5";
        } else if ("2nd SEMESTER".equals(settingSemester.getText()) && "HND".equals(settingLevel.getText())) {
            RecInserted = "SR6";
        } else if ("3rd SEMESTER".equals(settingSemester.getText()) && "HND".equals(settingLevel.getText())) {
            RecInserted = "SR7";
        } else if ("4th SEMESTER".equals(settingSemester.getText()) && "HND".equals(settingLevel.getText())) {
            RecInserted = "SR8";
        }

        DefaultTableModel mshowName = (DefaultTableModel) FR4tblshowRecName1.getModel();
        mshowName.setRowCount(0);
        Object[] obj = new Object[3];
        try {
            Statement stm = conn.createStatement();
            try (ResultSet rls = stm.executeQuery("SELECT id, first_name, surname, other_name, sex from BIO_DATA WHERE session = '" + settingSession.getText() + "' and department = '" + settingDep.getText() + "' and st_level = '" + settingLevel.getText() + "' and " + RecInserted + " = 'true'")) {
                while (rls.next()) {
                    obj[0] = rls.getString(1);
                    obj[1] = rls.getString(2) + " " + rls.getString(3) + " " + rls.getString(4);
                    obj[2] = rls.getString(5);
                    mshowName.addRow(obj);
                }
            }
        } catch (SQLException ex) {

        }

    }



     private void remark1(int b, int c, int l1, int l2) {
        String CA = null, Exam = null, Excep1 = null;
        for (int i = 0; i < FR4tblAddRec1.getRowCount(); i++) {
            try {
                CA = FR4tblAddRec1.getValueAt(b++, 2).toString();
                Exam = FR4tblAddRec1.getValueAt(c++, 3).toString();

            } catch (NullPointerException n) {
                if (CA == null | Exam == null) {
                    FR4tblAddRec1.setValueAt(0, l1++, 2);
                    FR4tblAddRec1.setValueAt(0, l2++, 3);
                    
                }
                Excep1 = n.toString();
            }
        }
        int com, CCA, ex, rowT = 4, rowG = 5;

        try {
            for (int i = 0; i < FR4tblAddRec1.getRowCount(); i++) {
                CCA = Integer.valueOf(FR4tblAddRec1.getValueAt(i, 2).toString());
                ex = Integer.valueOf(FR4tblAddRec1.getValueAt(i, 3).toString());
                com = CCA + ex;
                if(com > 100){
                    
                    FR4tblAddRec1.setValueAt(com, i, rowT);
                    FR4tblAddRec1.setValueAt("ERROR", i, rowG);
                    return;
                } 
                else if (com >= 90) {
                    FR4tblAddRec1.setValueAt(com, i, rowT);
                    FR4tblAddRec1.setValueAt("A", i, rowG);
                    
                } else if (com >= 85) {
                    FR4tblAddRec1.setValueAt(com, i, rowT);
                    FR4tblAddRec1.setValueAt("AB", i, rowG);
                    
                } else if (com >= 70) {
                    
                    FR4tblAddRec1.setValueAt(com, i, rowT);
                    FR4tblAddRec1.setValueAt("B", i, rowG);
                } else if (com >= 65) {
                    
                    FR4tblAddRec1.setValueAt(com, i, rowT);
                    FR4tblAddRec1.setValueAt("BC", i, rowG);
                    
                } else if (com >= 50) {
                   
                    FR4tblAddRec1.setValueAt(com, i, rowT);
                     FR4tblAddRec1.setValueAt("C", i, rowG);
                } else if (com >= 45) {
                    
                    FR4tblAddRec1.setValueAt(com, i, rowT);
                    FR4tblAddRec1.setValueAt("CD", i, rowG);
                } else if (com >= 40) {
                   
                    FR4tblAddRec1.setValueAt(com, i, rowT);
                     FR4tblAddRec1.setValueAt("D", i, rowG);
                } else if (com >= 35) {
                    
                    FR4tblAddRec1.setValueAt(com, i, rowT);
                    FR4tblAddRec1.setValueAt("E", i, rowG);
                    
                } else if(com < 35){
                    
                    FR4tblAddRec1.setValueAt(com, i, rowT);
                    FR4tblAddRec1.setValueAt("F", i, rowG);
                    
                } 
            }
            
        } catch (Exception e) {
            
            Excep1 = e.toString();
        }
        if (Excep1 == null) {
         grader1();
        Compile1(0, 0);
        adder1(0, 0);
            pushScores2(0, 0, 0, 0, 0, 0, 0);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Please fill all record correctly");
        }
        // Excep1 = null;
    }
    
     
private void grader1(){
    String caT2;
    try {
            for (int i = 0; i < FR4tblAddRec1.getRowCount(); i++) {
                caT2 = (String) FR4tblAddRec1.getValueAt(i, 5);      
                switch (caT2) {
                    case "A":
                        String S1 = String.format("%.1f", gA*Double.parseDouble((String)FR4tblAddRec1.getValueAt(i, 0)), i, 6);
                        FR4tblAddRec1.setValueAt(S1, i, 6);
                        break;
                    case "AB":
                       
                        String S2 = String.format("%.1f", gAB*Double.parseDouble((String)FR4tblAddRec1.getValueAt(i, 0)), i, 6);
                        FR4tblAddRec1.setValueAt(S2, i, 6);
                        break;
                    case "B":
                        String S3 = String.format("%.1f", gB*Double.parseDouble((String)FR4tblAddRec1.getValueAt(i, 0)), i, 6);
                        FR4tblAddRec1.setValueAt(S3, i, 6);
                        break;
                    case "BC":
                        
                        String S4 = String.format("%.1f", gBC*Double.parseDouble((String)FR4tblAddRec1.getValueAt(i, 0)), i, 6);
                        FR4tblAddRec1.setValueAt(S4, i, 6);
                        break;
                    case "C":
                        
                        String S5 = String.format("%.1f", gC*Double.parseDouble((String)FR4tblAddRec1.getValueAt(i, 0)), i, 6);
                        FR4tblAddRec1.setValueAt(S5, i, 6);
                        break;
                    case "CD":
                        
                        String S6 = String.format("%.1f", gCD*Double.parseDouble((String)FR4tblAddRec1.getValueAt(i, 0)), i, 6);
                        FR4tblAddRec1.setValueAt(S6, i, 6);
                        break;
                    case "D":
                        
                        String S7 = String.format("%.1f", gD*Double.parseDouble((String)FR4tblAddRec1.getValueAt(i, 0)), i, 6);
                        FR4tblAddRec1.setValueAt(S7, i, 6);
                        break;
                    case "E":
                        
                        String S8 = String.format("%.1f", gE*Double.parseDouble((String)FR4tblAddRec1.getValueAt(i, 0)), i, 6);
                        FR4tblAddRec1.setValueAt(S8, i, 6);
                        break;
                    default:
                       
                        String S9 = String.format("%.1f", gF*Double.parseDouble((String)FR4tblAddRec1.getValueAt(i, 0)), i, 6);
                        FR4tblAddRec1.setValueAt(S9, i, 6);
                        break;
                }
                
            }
        } catch (Exception e) {
            System.err.println(e);
        }
   
}
     
     private void Compile1(int row, int column){
   lblTU1.setText("0");
   lblTGPA1.setText("0");
        for (row = 0; row < FR4tblAddRec1.getRowCount(); row++) {
     int y = Integer.parseInt((String) FR4tblAddRec1.getValueAt(column++, 0));
         
         
     double th = Double.parseDouble(lblTU1.getText());
        lblTU1.setText(String.format("%.0f", (th + y)));

    }
   
} 
    
    private void adder1(int row, int column){
   
        for (row = 0; row < FR4tblAddRec1.getRowCount(); row++) {
        double y = Double.parseDouble(FR4tblAddRec1.getValueAt(column++, 6).toString());
      
         
     double th = Double.parseDouble(lblTGPA1.getText());
        lblTGPA1.setText(Double.toString(th + y));

    }
      String MyGPA = String.format("%.2f", Double.parseDouble(lblTGPA1.getText())/Double.parseDouble(lblTU1.getText()));
      JOptionPane.showMessageDialog(rootPane, "Your GPA is: " + MyGPA);
      
}
     private void pushScores2(int p, int p2, int p3, int p4, int p5, int p6, int p7) {

        String sql = "DELETE FROM SCORE WHERE id = '" + FR4tblshowRecName1.getValueAt(FR4tblshowRecName1.getSelectedRow(), 0).toString() + "'";
        try {
            PreparedStatement pscore2 = conn.prepareStatement(sql);
            pscore2.execute();
        } catch (SQLException sQLException) {
            System.err.println(sQLException);
        }

        Date current = new Date();
        SimpleDateFormat sd = new SimpleDateFormat("dd/MM/YYYY - hh:mm:ss");
        String sqlt = "INSERT INTO SCORE(id, semester, Course_unit, course, CA, Exam, Total, Remarks, CGPA, date_inserted )VALUES(?,?,?,?,?,?,?,?,?,?)";
        for (int n = 0; n < FR4tblAddRec1.getRowCount(); n++) {
            try {
                PreparedStatement upd = conn.prepareStatement(sqlt);
                upd.setString(1, FR4tblshowRecName1.getValueAt(FR4tblshowRecName1.getSelectedRow(), 0).toString());
                upd.setString(2, settingSemester.getText());
                upd.setString(3, FR4tblAddRec1.getValueAt(p++, 0).toString());
                upd.setString(4, FR4tblAddRec1.getValueAt(p2++, 1).toString());
                upd.setString(5, FR4tblAddRec1.getValueAt(p3++, 2).toString());
                upd.setString(6, FR4tblAddRec1.getValueAt(p4++, 3).toString());
                upd.setString(7, FR4tblAddRec1.getValueAt(p5++, 4).toString());
                upd.setString(8, FR4tblAddRec1.getValueAt(p6++, 5).toString());
                upd.setString(9, FR4tblAddRec1.getValueAt(p7++, 6).toString());
                upd.setString(10, sd.format(current));
                upd.executeUpdate();
            } catch (SQLException sQLException) {
                System.err.println(sQLException);
            }
        }
        JOptionPane.showMessageDialog(rootPane, "Updated..");
        btnUpdateScore.setEnabled(false);
        btnDeleScore.setEnabled(false);
        update_co(0, 0, 0, 0, 0);
    }
   
    private void settDepartment() {
        setDepartment.removeAllItems();
        try {
            Statement ss = conn.createStatement();
            ResultSet rr = ss.executeQuery("SELECT dep_sort FROM DEPARTMENT");
            while (rr.next()) {

                setDepartment.addItem(rr.getString(1));
            }
        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }

    private void setting() {
        try {
            ResultSet Rsetting;
            try (Statement Psetting = conn.createStatement()) {
                Rsetting = Psetting.executeQuery("SELECT * FROM Settings");
                while (Rsetting.next()) {
                    settingDep.setText(Rsetting.getString(2));
                    settingSession.setText(Rsetting.getString(3));
                    settingLevel.setText(Rsetting.getString(4));
                    settingSemester.setText(Rsetting.getString(5));
                }
            }
            Rsetting.close();
        } catch (SQLException sQLException) {
        }
    }

    private void refresh1() {
        FR4tblshowNames();
        FR4tblshowNames2();

    }
    private void carryover(int c, int c2, int c3, int c4, int c5){            
   
        for (int n = 0; n < FR4tblAddRec.getRowCount(); n++) {
            try {
                PreparedStatement carryover;
                carryover = conn.prepareStatement("insert into CARRY_OVER (id, department, session, level, semester, course, CA, Exam, Total, Remark)VALUES(?,?,?,?,?,?,?,?,?,?)");
                carryover.setString(1, FR4tblshowRecName.getValueAt(FR4tblshowRecName.getSelectedRow(), 0).toString());
                carryover.setString(2, settingDep.getText());
                carryover.setString(3, settingSession.getText());
                carryover.setString(4, settingLevel.getText());
                carryover.setString(5, settingSemester.getText());
                carryover.setString(6, FR4tblAddRec.getValueAt(c++, 0).toString());
                carryover.setString(7, FR4tblAddRec.getValueAt(c2++, 1).toString());
                carryover.setString(8, FR4tblAddRec.getValueAt(c3++, 2).toString());
                carryover.setString(9, FR4tblAddRec.getValueAt(c4++, 3).toString());
                carryover.setString(10, FR4tblAddRec.getValueAt(c5++, 4).toString());
                carryover.executeUpdate();
            } catch (SQLException sQLException) {
                System.err.println(sQLException);
            }
        }
        try{  
        PreparedStatement DelnonValid = conn.prepareStatement("delete from CARRY_OVER where CARRY_OVER.Remark != 'F'");
        DelnonValid.execute();

        } catch (SQLException ex) {
            Logger.getLogger(Add_new_Student.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }
    
    private void update_co(int k, int l, int m, int n, int o){
     String del = "DELETE FROM CARRY_OVER WHERE id = ?";
        try {
            PreparedStatement updel = conn.prepareStatement(del);
            updel.setString(1, FR4tblshowRecName1.getValueAt(FR4tblshowRecName1.getSelectedRow(), 0).toString());
            updel.execute();
        } catch (SQLException ex) {
            Logger.getLogger(Add_new_Student.class.getName()).log(Level.SEVERE, null, ex);
        }
     
     
     for (int a = 0; a < FR4tblAddRec.getRowCount(); a++) {
            try {
                PreparedStatement carryover;
                carryover = conn.prepareStatement("insert into CARRY_OVER (id, department, session, level, semester, course, CA, Exam, Total, Remark)VALUES(?,?,?,?,?,?,?,?,?,?)");
                carryover.setString(1, FR4tblshowRecName1.getValueAt(FR4tblshowRecName1.getSelectedRow(), 0).toString());
                carryover.setString(2, settingDep.getText());
                carryover.setString(3, settingSession.getText());
                carryover.setString(4, settingLevel.getText());
                carryover.setString(5, settingSemester.getText());
                carryover.setString(6, FR4tblAddRec1.getValueAt(k++, 0).toString());
                carryover.setString(7, FR4tblAddRec1.getValueAt(l++, 1).toString());
                carryover.setString(8, FR4tblAddRec1.getValueAt(m++, 2).toString());
                carryover.setString(9, FR4tblAddRec1.getValueAt(n++, 3).toString());
                carryover.setString(10, FR4tblAddRec1.getValueAt(o++, 4).toString());
                carryover.executeUpdate();
            } catch (SQLException sQLException) {
                System.err.println(sQLException);
            }
        } 
    try{  
        PreparedStatement DelnonValid = conn.prepareStatement("delete from CARRY_OVER where CARRY_OVER.Remark != 'F'");
        DelnonValid.execute();

        } catch (SQLException ex) {
            Logger.getLogger(Add_new_Student.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
 DefaultTableModel modelDashboard;
    private void addTableHeader() {
        modelDashboard = (DefaultTableModel) tblDashboard.getModel();
        Object[] newIdentifiers = new Object[]{"Picture", "ID No.", "First Name", "Surname", "Othername", "Gender", "Date of Birth", "State", "LGA", "Phone Number", "Email", "Date Reg.", "Registered By"};
        modelDashboard.setColumnIdentifiers(newIdentifiers);
       // Get Image column and override  TableCellRenderer class component method (getTableCellRendererComponent)
        tblDashboard.getColumn("Picture").setCellRenderer(new myTableCellRenderer());
        
    }

    class myTableCellRenderer implements TableCellRenderer {
         
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
 
//            Change Image column minimum width and maximum width
            TableColumn tb = tblDashboard.getColumn("Picture");
            tb.setMaxWidth(80);
            tb.setMinWidth(80);
            tblDashboard.setRowHeight(80);
            return (Component) value;
             
        }
         
    }
 private void populateTable(){
PreparedStatement stp;
ResultSet rs;
    Object[] obj = new Object[13];
    ImageIcon imageicon;
    modelDashboard.setRowCount(0);
        try {
        stp = conn.prepareStatement("select photo, id, first_name, surname, other_name, sex, dob, state, lga, phone, email, date_reg, reg_by from BIO_DATA");
        rs = stp.executeQuery(); 
        while(rs.next()){
        JLabel imageLabel = new JLabel();
        if(rs.getBytes(1) == null){
           imageLabel.setText("      No Image");
        }else{
            imageicon = new ImageIcon(rs.getBytes(1));
            Image imageIc = imageicon.getImage().getScaledInstance(80, 80, Image.SCALE_SMOOTH);
            imageLabel.setIcon(new ImageIcon(imageIc));
         }
        
        obj[0] = imageLabel;
        obj[1] = rs.getString(2);
        obj[2] = rs.getString(3);
        obj[3] = rs.getString(4);
        obj[4] = rs.getString(5);
        obj[5] = rs.getString(6);
        obj[6] = rs.getString(7);
        obj[7] = rs.getString(8);
        obj[8] = rs.getString(9);
        obj[9] = rs.getString(10);
        obj[10] = rs.getString(11);
        obj[11] = rs.getString(12);
        obj[12] = rs.getString(13);
        modelDashboard.addRow(obj); 
        }
        stp.close();
        rs.close();
        //conn.close();
        
        
        } catch (Exception e) {
            System.err.println(e);
        
        }

}
 
 String ca;
    private void grader(){
    try {
            for (int i = 0; i < FR4tblAddRec.getRowCount(); i++) {
                ca = (String) FR4tblAddRec.getValueAt(i, 5);      
                switch (ca) {
                    case "A":
                        String S1 = String.format("%.1f", gA*Double.parseDouble((String)FR4tblAddRec.getValueAt(i, 0)), i, 6);
                        FR4tblAddRec.setValueAt(S1, i, 6);
                        break;
                    case "AB":
                       
                        String S2 = String.format("%.1f", gAB*Double.parseDouble((String)FR4tblAddRec.getValueAt(i, 0)), i, 6);
                        FR4tblAddRec.setValueAt(S2, i, 6);
                        break;
                    case "B":
                        String S3 = String.format("%.1f", gB*Double.parseDouble((String)FR4tblAddRec.getValueAt(i, 0)), i, 6);
                        FR4tblAddRec.setValueAt(S3, i, 6);
                        break;
                    case "BC":
                        
                        String S4 = String.format("%.1f", gBC*Double.parseDouble((String)FR4tblAddRec.getValueAt(i, 0)), i, 6);
                        FR4tblAddRec.setValueAt(S4, i, 6);
                        break;
                    case "C":
                        
                        String S5 = String.format("%.1f", gC*Double.parseDouble((String)FR4tblAddRec.getValueAt(i, 0)), i, 6);
                        FR4tblAddRec.setValueAt(S5, i, 6);
                        break;
                    case "CD":
                        
                        String S6 = String.format("%.1f", gCD*Double.parseDouble((String)FR4tblAddRec.getValueAt(i, 0)), i, 6);
                        FR4tblAddRec.setValueAt(S6, i, 6);
                        break;
                    case "D":
                        
                        String S7 = String.format("%.1f", gD*Double.parseDouble((String)FR4tblAddRec.getValueAt(i, 0)), i, 6);
                        FR4tblAddRec.setValueAt(S7, i, 6);
                        break;
                    case "E":
                        
                        String S8 = String.format("%.1f", gE*Double.parseDouble((String)FR4tblAddRec.getValueAt(i, 0)), i, 6);
                        FR4tblAddRec.setValueAt(S8, i, 6);
                        break;
                    default:
                       
                        String S9 = String.format("%.1f", gF*Double.parseDouble((String)FR4tblAddRec.getValueAt(i, 0)), i, 6);
                        FR4tblAddRec.setValueAt(S9, i, 6);
                        break;
                }
                
            }
        } catch (Exception e) {
            System.err.println(e);
        }
   
}

    private void ahmad(int row, int column){
   lblTU.setText("0");
   lblTGPA.setText("0");
        for (row = 0; row < FR4tblAddRec.getRowCount(); row++) {
     int y = Integer.parseInt((String) FR4tblAddRec.getValueAt(column++, 0));
         
         
     double th = Double.parseDouble(lblTU.getText());
        lblTU.setText(String.format("%.0f", (th + y)));

    }
   
}
    private void adder(int row, int column){
   
        for (row = 0; row < FR4tblAddRec.getRowCount(); row++) {
        double y = Double.parseDouble(FR4tblAddRec.getValueAt(column++, 6).toString());
      
         
     double th = Double.parseDouble(lblTGPA.getText());
        lblTGPA.setText(Double.toString(th + y));

    }
      String MyGPA = String.format("%.2f", Double.parseDouble(lblTGPA.getText())/Double.parseDouble(lblTU.getText()));
      JOptionPane.showMessageDialog(rootPane, "Your GPA is: " + MyGPA);
      
}
    
    }
