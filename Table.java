/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Rampoly_RMS;

import java.awt.Color;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ahmadintech
 */
public class Table extends javax.swing.JFrame {
Connection conn;
Double gA, gAB, gB, gBC, gC, gCD, gD, gE, gF;
    DefaultTableModel model;
    
    /**
     * Creates new form Table
     */
    public Table() {
        initComponents();
        conn = ConnectMe.SQL();
        getter();
        courseUnit();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        FR4tblAddRec1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        lblTU = new javax.swing.JLabel();
        lblTGPA = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        FR4tblAddRec1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Unit", "Course", "CA", "Exam", "Total", "Grade", "CGPA"
            }
        ));
        jScrollPane1.setViewportView(FR4tblAddRec1);

        jButton1.setText("Compile");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lblTU.setText("0");

        lblTGPA.setText("0");

        jLabel3.setText("Total Unit of Course");

        jLabel4.setText("Total CGPA");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblTU, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTGPA, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 906, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTU)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTGPA)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        remark1(0, 0, 0, 0);
       
        
    }//GEN-LAST:event_jButton1ActionPerformed
private void getter(){
    Statement stm;
    try {
        stm = conn.createStatement();
        ResultSet rs = stm.executeQuery("SELECT * from Grade");
        while(rs.next()){
            gA = rs.getDouble(1);
            gAB = rs.getDouble(2);
            gB = rs.getDouble(3);
            gBC = rs.getDouble(4);
            gC = rs.getDouble(5);
            gCD = rs.getDouble(6);
            gD = rs.getDouble(7);
            gE = rs.getDouble(8);
            gF = rs.getDouble(9);
            
        }
        
    } catch (SQLException sxe) {
        System.err.println(sxe);
    }
    
}
private void courseUnit(){
    Object obj [] = new Object[2];
    model = (DefaultTableModel)FR4tblAddRec1.getModel();
    model.setRowCount(0);
        Statement stm;
    try {
        stm = conn.createStatement();
        ResultSet rs = stm.executeQuery("SELECT Course_unit, course_Abvr FROM COURSE WHERE department = 'COE'");
        while(rs.next()){
            obj[0] = rs.getString(1);
            obj[1] = rs.getString(2);
            model.addRow(obj);
        }

    } catch (SQLException ex) {
        Logger.getLogger(Table.class.getName()).log(Level.SEVERE, null, ex);
    }
}

String caT2;
private void grader(){
    try {
            for (int i = 0; i < FR4tblAddRec1.getRowCount(); i++) {
                caT2 = (String) FR4tblAddRec1.getValueAt(i, 5);      
                switch (caT2) {
                    case "A":
                        String S1 = String.format("%.1f", gA*Double.parseDouble((String)FR4tblAddRec1.getValueAt(i, 0)), i, 6);
                        FR4tblAddRec1.setValueAt(S1, i, 6);
                        break;
                    case "AB":
                       
                        String S2 = String.format("%.1f", gAB*Double.parseDouble((String)FR4tblAddRec1.getValueAt(i, 0)), i, 6);
                        FR4tblAddRec1.setValueAt(S2, i, 6);
                        break;
                    case "B":
                        String S3 = String.format("%.1f", gB*Double.parseDouble((String)FR4tblAddRec1.getValueAt(i, 0)), i, 6);
                        FR4tblAddRec1.setValueAt(S3, i, 6);
                        break;
                    case "BC":
                        
                        String S4 = String.format("%.1f", gBC*Double.parseDouble((String)FR4tblAddRec1.getValueAt(i, 0)), i, 6);
                        FR4tblAddRec1.setValueAt(S4, i, 6);
                        break;
                    case "C":
                        
                        String S5 = String.format("%.1f", gC*Double.parseDouble((String)FR4tblAddRec1.getValueAt(i, 0)), i, 6);
                        FR4tblAddRec1.setValueAt(S5, i, 6);
                        break;
                    case "CD":
                        
                        String S6 = String.format("%.1f", gCD*Double.parseDouble((String)FR4tblAddRec1.getValueAt(i, 0)), i, 6);
                        FR4tblAddRec1.setValueAt(S6, i, 6);
                        break;
                    case "D":
                        
                        String S7 = String.format("%.1f", gD*Double.parseDouble((String)FR4tblAddRec1.getValueAt(i, 0)), i, 6);
                        FR4tblAddRec1.setValueAt(S7, i, 6);
                        break;
                    case "E":
                        
                        String S8 = String.format("%.1f", gE*Double.parseDouble((String)FR4tblAddRec1.getValueAt(i, 0)), i, 6);
                        FR4tblAddRec1.setValueAt(S8, i, 6);
                        break;
                    default:
                       
                        String S9 = String.format("%.1f", gF*Double.parseDouble((String)FR4tblAddRec1.getValueAt(i, 0)), i, 6);
                        FR4tblAddRec1.setValueAt(S9, i, 6);
                        break;
                }
                
            }
        } catch (Exception e) {
            System.err.println(e);
        }
   
}

    private void ahmad(int row, int column){
   lblTU.setText("0");
   lblTGPA.setText("0");
        for (row = 0; row < FR4tblAddRec1.getRowCount(); row++) {
     int y = Integer.parseInt((String) FR4tblAddRec1.getValueAt(column++, 0));
         
         
     double th = Double.parseDouble(lblTU.getText());
        lblTU.setText(String.format("%.0f", (th + y)));

    }
   
}
    private void adder(int row, int column){
   
        for (row = 0; row < FR4tblAddRec1.getRowCount(); row++) {
        double y = Double.parseDouble(FR4tblAddRec1.getValueAt(column++, 6).toString());
      
         
     double th = Double.parseDouble(lblTGPA.getText());
        lblTGPA.setText(Double.toString(th + y));

    }
      String MyGPA = String.format("%.2f", Double.parseDouble(lblTGPA.getText())/Double.parseDouble(lblTU.getText()));
      JOptionPane.showMessageDialog(rootPane, "Your GPA is: " + MyGPA);
      
}
    
String CA2;
private void grader2(){
    try {
            for (int i = 0; i < FR4tblAddRec1.getRowCount(); i++) {
                caT2 = (String) FR4tblAddRec1.getValueAt(i, 5);      
                switch (caT2) {
                    case "A":
                        String S1 = String.format("%.1f", gA*Double.parseDouble((String)FR4tblAddRec1.getValueAt(i, 0)), i, 6);
                        FR4tblAddRec1.setValueAt(S1, i, 6);
                        break;
                    case "AB":
                       
                        String S2 = String.format("%.1f", gAB*Double.parseDouble((String)FR4tblAddRec1.getValueAt(i, 0)), i, 6);
                        FR4tblAddRec1.setValueAt(S2, i, 6);
                        break;
                    case "B":
                        String S3 = String.format("%.1f", gB*Double.parseDouble((String)FR4tblAddRec1.getValueAt(i, 0)), i, 6);
                        FR4tblAddRec1.setValueAt(S3, i, 6);
                        break;
                    case "BC":
                        
                        String S4 = String.format("%.1f", gBC*Double.parseDouble((String)FR4tblAddRec1.getValueAt(i, 0)), i, 6);
                        FR4tblAddRec1.setValueAt(S4, i, 6);
                        break;
                    case "C":
                        
                        String S5 = String.format("%.1f", gC*Double.parseDouble((String)FR4tblAddRec1.getValueAt(i, 0)), i, 6);
                        FR4tblAddRec1.setValueAt(S5, i, 6);
                        break;
                    case "CD":
                        
                        String S6 = String.format("%.1f", gCD*Double.parseDouble((String)FR4tblAddRec1.getValueAt(i, 0)), i, 6);
                        FR4tblAddRec1.setValueAt(S6, i, 6);
                        break;
                    case "D":
                        
                        String S7 = String.format("%.1f", gD*Double.parseDouble((String)FR4tblAddRec1.getValueAt(i, 0)), i, 6);
                        FR4tblAddRec1.setValueAt(S7, i, 6);
                        break;
                    case "E":
                        
                        String S8 = String.format("%.1f", gE*Double.parseDouble((String)FR4tblAddRec1.getValueAt(i, 0)), i, 6);
                        FR4tblAddRec1.setValueAt(S8, i, 6);
                        break;
                    default:
                       
                        String S9 = String.format("%.1f", gF*Double.parseDouble((String)FR4tblAddRec1.getValueAt(i, 0)), i, 6);
                        FR4tblAddRec1.setValueAt(S9, i, 6);
                        break;
                }
                
            }
        } catch (Exception e) {
            System.err.println(e);
        }
   
}

    private void ahmad2(int row, int column){
   lblTU.setText("0");
   lblTGPA.setText("0");
        for (row = 0; row < FR4tblAddRec1.getRowCount(); row++) {
     int y = Integer.parseInt((String) FR4tblAddRec1.getValueAt(column++, 0));
         
         
     double th = Double.parseDouble(lblTU.getText());
        lblTU.setText(String.format("%.0f", (th + y)));

    }
   
}
    private void adder2(int row, int column){
   
        for (row = 0; row < FR4tblAddRec1.getRowCount(); row++) {
        double y = Double.parseDouble(FR4tblAddRec1.getValueAt(column++, 6).toString());
      
         
     double th = Double.parseDouble(lblTGPA.getText());
        lblTGPA.setText(Double.toString(th + y));

    }
      String MyGPA = String.format("%.2f", Double.parseDouble(lblTGPA.getText())/Double.parseDouble(lblTU.getText()));
      JOptionPane.showMessageDialog(rootPane, "Your GPA is: " + MyGPA);
      
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Table().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable FR4tblAddRec1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTGPA;
    private javax.swing.JLabel lblTU;
    // End of variables declaration//GEN-END:variables

 private void remark1(int b, int c, int l1, int l2) {
        String CA = null, Exam = null, Excep1 = null;
        for (int i = 0; i < FR4tblAddRec1.getRowCount(); i++) {
            try {
                CA = FR4tblAddRec1.getValueAt(b++, 2).toString();
                Exam = FR4tblAddRec1.getValueAt(c++, 3).toString();

            } catch (NullPointerException n) {
                if (CA == null | Exam == null) {
                    FR4tblAddRec1.setValueAt(0, l1++, 2);
                    FR4tblAddRec1.setValueAt(0, l2++, 3);
                    
                }
                Excep1 = n.toString();
            }
        }
        int com, CCA, ex, rowT = 4, rowG = 5;

        try {
            for (int i = 0; i < FR4tblAddRec1.getRowCount(); i++) {
                CCA = Integer.valueOf(FR4tblAddRec1.getValueAt(i, 2).toString());
                ex = Integer.valueOf(FR4tblAddRec1.getValueAt(i, 3).toString());
                com = CCA + ex;
                if(com > 100){
                    
                    FR4tblAddRec1.setValueAt(com, i, rowT);
                    FR4tblAddRec1.setValueAt("ERROR", i, rowG);
                    return;
                } 
                else if (com >= 90) {
                    FR4tblAddRec1.setValueAt(com, i, rowT);
                    FR4tblAddRec1.setValueAt("A", i, rowG);
                    
                } else if (com >= 85) {
                    FR4tblAddRec1.setValueAt(com, i, rowT);
                    FR4tblAddRec1.setValueAt("AB", i, rowG);
                    
                } else if (com >= 70) {
                    
                    FR4tblAddRec1.setValueAt(com, i, rowT);
                    FR4tblAddRec1.setValueAt("B", i, rowG);
                } else if (com >= 65) {
                    
                    FR4tblAddRec1.setValueAt(com, i, rowT);
                    FR4tblAddRec1.setValueAt("BC", i, rowG);
                    
                } else if (com >= 50) {
                   
                    FR4tblAddRec1.setValueAt(com, i, rowT);
                     FR4tblAddRec1.setValueAt("C", i, rowG);
                } else if (com >= 45) {
                    
                    FR4tblAddRec1.setValueAt(com, i, rowT);
                    FR4tblAddRec1.setValueAt("CD", i, rowG);
                } else if (com >= 40) {
                   
                    FR4tblAddRec1.setValueAt(com, i, rowT);
                     FR4tblAddRec1.setValueAt("D", i, rowG);
                } else if (com >= 35) {
                    
                    FR4tblAddRec1.setValueAt(com, i, rowT);
                    FR4tblAddRec1.setValueAt("E", i, rowG);
                    
                } else if(com < 35){
                    
                    FR4tblAddRec1.setValueAt(com, i, rowT);
                    FR4tblAddRec1.setValueAt("F", i, rowG);
                    
                } 
            }
            
        } catch (Exception e) {
            
            Excep1 = e.toString();
        }
        if (Excep1 == null) {
         grader();
        ahmad(0, 0);
        adder(0, 0);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Please fill all record correctly");
        }
        // Excep1 = null;
    }

}
